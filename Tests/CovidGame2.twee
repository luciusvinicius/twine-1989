:: StoryTitle
CovidGame2


:: StoryData
{
  "ifid": "B23132D3-91BF-4158-99DA-9C128303991B",
  "format": "SugarCube",
  "format-version": "2.36.1",
  "start": "WakeUp",
  "tag-colors": {
    "autosave": "green",
    "noreturn": "red"
  },
  "zoom": 1
}

:: DebugStats
  <<silently>>
  <<set _health to getHealth()>>
  <<set _carefulness to getWariness()>>
  <<set _social_dist to getSocialDist()>>
  <<set _money to getMoney()>>
  <<set _day to getDay()>>
  <</silently>>
  Day: _day
  <div class="hud-flex-box">
  <div class="hud-box">Health: <div class="hud-bar"><div id="health" class="w3-red w3-center hud-content"></div></div></div>
  <div class="hud-box">Carefulness: <div class="hud-bar"><div id="wariness" class="w3-green w3-center hud-content"></div></div></div>
  </div>
  <div class="hud-flex-box">
  <div class="hud-box">Social Distance: <div class="hud-bar"><div id="social-dist" class="w3-blue w3-center hud-content"></div></div></div>
  <div class="hud-box">Money: <div class="hud-bar"><div id="money" class="w3-yellow w3-center hud-content"></div></div></div>
  </div>
  <<silently>>
  <<done>>
    <<set document.getElementById("health").style.width = `${_health * 100/40}%`>>
    <<set document.getElementById("wariness").style.width = `${_carefulness * 100/40}%`>>
    <<set document.getElementById("social-dist").style.width = `${_social_dist * 100/40}%`>>
    <<set document.getElementById("money").style.width = `${_money * 100/40}%`>>
  <</done>>
  <</silently>>


:: StablePhaseCommon
  /* Common procedures when game enters any of the stable phases */
  <<nobr>>
    <<script>>setTest(false)<</script>>
    <<script>>setWashed(false)<</script>>
  <</nobr>>
  /* mask is reset the start of each day */


:: WakeUp [autosave]
  /* Reset and evaluate daily procedures and variables */
  <<nobr>>
    <<set _remaining_days to getRemainingDays()>>
    <<script>>goToNextDay()<</script>>
    <<script>>setMask(false)<</script>>
  <</nobr>>
  <<if _remaining_days == 0>>
    [[It's here! Vaccine day has arrived!|EndingPool]]
  <<elseif _remaining_days == 1>>
    There is _remaining_days day before the release of the vaccine.
    [[Just one more day|MorningPhase]]
  <<else>>
    There are _remaining_days days before the release of the vaccine.
    [[Another day begins|MorningPhase]]
  <</if>>


:: EndingPool
  Here it is at last!

  Steve's assigned vaccination day has arrived!

  <<silently>>
    <<set _ending to "GoodEnding1">>

    <<if isCareless()>>
      <<set _ending to "CarelessEnding1">>
    <<elseif isPanick()>>
      <<set _ending to "PanickEnding1">>
    <<elseif isDepressed()>>
      <<set _ending to "DepressedEnding1">>
    <<elseif isNotDistance()>>
      <<set _ending to "PartyEnding1">>
    <<elseif isSick()>>
      <<set _ending to "SickEnding1">>
    <<elseif isOverconfident()>>
      <<set _ending to "OverconfidentEnding1">>
    <<elseif isRich()>>
      <<set _ending to "RichEnding1">>
    <<elseif isBroke()>>
      <<set _ending to "BrokeEnding1">>
    <</if>>
  <</silently>>

  [[Time to get ready, Steve!|_ending]]


:: MorningPhase
  <<nobr>>
    <<include "DebugStats">>
    <<include "StablePhaseCommon">>
  <</nobr>>
  <<silently>>
    <<set $stable_passage to "MorningPhase">>
  <</silently>>

  <<nobr>>
  <<if isDepressed()>>
    Another meaningless day begins... How is Steve supposed to even keep track anymore...
    No matter how many days pass, that void in Steve's very soul, derived from that craving for human contact, keeps getting wider and wider...
  <<elseif isNotDistance()>>
    Steve looked at his cellphone fulled with messages from people and he is anxious to start to talk to people again. Did he forget that we are in a pandemic?
  <<elseif isPanick()>>
    So, another day begins. Another trial awaits Steve once again. Outside, all sorts of dangers await. Perhaps, if Steve could convince his boss to let him work fully remote, Steve could barricade himself in his room until the pandemic ends!
    He has food. He has water. He has toilet paper! It might not be such a bad idea. Outside, all sorts of danger awaits. Inside, Steve can stay safe. <b>FOR EVER.</b>
  <<elseif isCareless()>>
    Steve just looked at the neighbour using a mask through the window and made a disgusted face. You aren't falling for fake news, right, Steve?
  <<elseif isBroke()>>
    Steve looks at his piggy bank in dismay. His savings should last him until he gets the vaccine at least. But after that, who knows........
  <<elseif isRich()>>
    Steve looks confident as he sees his wallet full.
  <<elseif isSick()>>
    Oh no... Steve looks bad, like, REALLY BAD.
  <<elseif isOverconfident()>>
    What is a disease for someone as healthy as Steve? He isn't even at the target age of risk!
  <<else>>
    Good morning Steve, get ready for another day!
  <</if>>
  <</nobr>>


  <<if randomChance(60)>>
    <<if isSick()>>
      Whoa... Steve feels a little dizzy, right now. That's not a good sign.
    <<elseif isUnhealthy()>>
      Hmm. Steve just coughed...
    <</if>>
  <</if>>

  /* --- Steve's Morning Actions --- */
  <<if getMask()>>
    [[Remove Mask|MorningMaskOff]]
  <<else>>
    [[Put a mask on|MorningMaskOn]]
  <</if>>
  [[Take a COVID test|TakeTest]]
  [[Wash Hands|MorningWash]]

  After he is ready, Steve must work. His company does have the option to work from home... though they don't really support it much...
  What to do...

  [[Go to work in person|MorningChooseOffice]]
  [[Call his boss to request working from home|MorningChooseTelework]]
  /* ----- */


:: MorningMaskOn 
  /* Morning mask on test. In the morning, Steve should put on a mask, since he's is going outside. Putting a mask on increases health. Does NOT increase wariness because that's what he should do. */
  <<include "DebugStats">>
  /* this passage determines whether Steve puts on mask and shows the correct message */
  <<if isCareless()>>
    <<silently>>
      <<set _result to arrayChoice([
        "Steve decides not to put on the mask. He read online that masks may cause you to die by choking in your own breath.",
        "Steve decides not to put on the mask. He heard from a friend that their cousin's wife's neighbour had a horrible reaction to wearing a mask for a full day!"
      ])>> /* add more variations inside the array */
    <</silently>>


    _result /* Display the resulting message */

    [[What the hell, Steve...|$stable_passage]]
  <<else>>
    <<silently>>
      <<script>>addHealth(2)<</script>>
      <<script>>setMask(true)<</script>>
    <</silently>>
    Steve puts his mask on. Feeling protected already!

    [[Well done, Steve!|$stable_passage]]
  <</if>>


:: MorningMaskOff 
  /* Morning mask off test. In the morning, Steve should put on a mask, since he's is going outside. Taking off the mask, results in minus health and minus wariness */
  <<include "DebugStats">>
  /* this passage determines whether Steve takes mask off and shows the correct message */
  <<if isParanoid()>>
    <<silently>>
      <<set _result to arrayChoice([
        /*"Steve is trembling just thinking about taking the mask off. In the end, he leaves it on.",
        "Not only does Steve NOT take the mask off, he puts on ANOTHER mask over the previous one. That might be overdoing it a bit.",*/
        "Steve looks at the scary, germ-infected cruel world out the window and promptly decides to ignore the idea of taking the mask off.",
        "Steve actually ponders taking the mask off just for a split-second, before recalling all the different theories and studies on virus spread rate and risks. He puts his mask on tighter."
      ])>> /* add more variations inside the array */
    <</silently>>

    _result /* Display the resulting message */

    [[Well, yeah, maybe that's for the best, Steve|$stable_passage]]
    /*[[What the hell, Steve...|$stable_passage]]*/
  <<else>>
    <<silently>>
      <<script>>addHealth(-2)<</script>>
      <<script>>addWariness(-5)<</script>>
      <<script>>setMask(false)<</script>>
    <</silently>>
    Well.... Steve is supposed to go outside right now, but he looks sort of troubled by the mask. Maybe taking it off a bit would be good....

    [[Hopefully, nothing bad will come of it|$stable_passage]]
  <</if>>


:: TakeTest 
  <<include "DebugStats">>
  /* this passage will have Steve try to take a test */
  <<if isCareless()>>
    <<silently>>
      <<set _result to arrayChoice([
        "Screw tests! ...Is what Steve seems to think, as he puts the test he just opened straight in the trash.",
        "Steve looks at the swab in disgust. Seems there is no way he is sticking that up his nose."
      ])>>
    <</silently>>

    _result /* Display the resulting message */

    [[What the hell, Steve...|$stable_passage]]
  <<else>>
    Steve reluctanly stabs his nostril with the swab and rummages around before he finally stops torturing his nose.

    And now, we wait...

    [[Wait for the result|WaitTest]]
  <</if>>


:: WaitTest 
  <<include "DebugStats">>
  The suspense is killing Steve. He feels fine, sort of.
  So it should most definitely be fine....right?

  [[See the results|ResultTest]]


:: ResultTest 
  <<include "DebugStats">>
  /* determine whether Health is below COVID threshold */
  <<if isSick()>>
    It came back positive....

    It seems Steve wasn't careful enough. Right now, the best thing to do is to be extra careful and wait to get better.
  <<else>>
    <<silently>>
      /* Steve is an idiot, so taking a negative test boosts his confidence */
      <<script>>addWariness(-5)<</script>>
    <</silently>>
    It's negative. Well that's good news, but remember, it might be a false negative. So there is no reason to be any less careful, right Steve? ...Steve?

    Steve, you look way more relieved than you should be...
  <</if>>

  [[Back|$stable_passage]]


:: MorningWash
  <<include "DebugStats">>
  /* Morning hand wash. Since it's morning, it's not as important and overdoing it increases wariness. */

  Steve just woke up, but you never know right. Virus could be anywhere. He should wash his hands, just to be safe... Right?

  <<if isCareless()>>
    Steve doesn't seem to think so. Well, it is morning, but you shouldn't be so dismissive about it either way Steve...
  <<elseif isParanoid()>>
    Steve seems a little too eager to wash his hands. He's even doing the whole birthday song thing. It's only morning Steve, maybe you don't need that much.
  <<else>>
    Indeed, Steve starts thinking that maybe he hasn't been washing ENOUGH... Uh oh...
    <<script>>addWariness(5)<</script>>
  <</if>>

  [[Back|$stable_passage]]


:: MorningChooseOffice
  /* choosing to go to work in person */
  <<include "DebugStats">>
  <<if isParanoid()>>
    <<silently>>
      <<script>>addMoney(-3)<</script>>
      <<set _result to arrayChoice([
        "Steve refuses to even think about leaving the house. There's people out there, mindlessly spitting germs and deadly viruses into each others faces!",
        "Apparently Steve never even got out of his pajamas and has already sat down at his desk, surounded by toilet paper and hand sanitiser bottles. Seems someone isn't getting out anytime soon...\n"
      ])>>
    <</silently>>
    _result

    [[Aaaaah.... If you say so, Steve...|TeleworkPhase]]
  <<else>>
    <<silently>>
      <<script>>addSocialDist(-4)<</script>>
    <</silently>>
    Steve should probably go to work. His boss wouldn't be very happy if he skipped anyway.

    [[To work we go!|OfficePool1]]
  <</if>>


:: MorningChooseTelework
  /* choosing to work from home */
  <<include "DebugStats">>
  <<if isIsolated()>>
    <<silently>>
      <<set _result to arrayChoice([
        "Steve couldn't give a rat's ass about safety right now. HE NEEDS TO SEE ANOTHER HUMAN BEING.",
        "Being away from people for so long, the thought of staying home never even crossed Steve's mind as he is already opening the front door to go out."
      ])>>
    <</silently>>

    _result

    [[Just try to be careful, Steve...|OfficePool1]]
  <<else>>
    <<silently>>
      <<script>>addSocialDist(10)<</script>>
      <<script>>addMoney(-5)<</script>>
    <</silently>>
    Staying home is good from time to time. And much safer too.
    Of course, his boss might remember this at his next salary evaluation...

    [[Time to "work"|TeleworkPhase]]
  <</if>>


:: OfficePool1 
  /* this passage will have the random events that Steve might do while going to work */
  <<nobr>>
  <<set _morning_event to either("MorningWalk", "MorningBus", "TeleworkAnnounce")>>
  <</nobr>>
  <<include _morning_event>>


:: MorningWalk 
  <<include "DebugStats">>
  Steve decided to exercise a little and take a walk to the work.

  @@#links;
  <<link "Walk normally on the street">>
      <<replace "#links">>\
        <<silently>>
          <<set _chance to arrayChoice([0,1])>>
        <</silently>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<silently>>
            <<script>>addHealth(-4)<</script>>
          <</silently>>
          Steve meets a friend on the street.
          He greets his friend, but forgets to keep his distance. Dammit Steve!
        <<elseif _chance == 1>> /* Random outcome 1 */
          <<silently>>
            <<script>>addSocialDist(-4)<</script>>
          <</silently>>
          Walking on the street, Steve has a chance to greet his neighbours. Safely, of course.
          It's a good chance to keep in touch with people. Good for you Steve.
        <</if>>
        [[Work begins!|OfficePhase1]]
      <</replace>>
  <</link>>
  <<link "Expertly avoid any and all living soul on sight">>
      <<replace "#links">>\
        <<silently>>
          <<set _chance to arrayChoice([0,1])>>
        <</silently>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<silently>>
            <<script>>addHealth(2)<</script>>
            <<script>>addSocialDist(2)<</script>>
          <</silently>>
          What a nice day it is today. Steve feels good after doing some exercise!
          Nicely done, Steve!
        <<elseif _chance == 1>> /* Random outcome 1 */
          <<silently>>
            <<script>>addMoney(-4)<</script>>
          <</silently>>
          Steve was so caught up in avoiding people that he forgot where he was going. He should be in the office already!
          His boss won't be happy...
        <</if>>
        [[Work begins!|OfficePhase1]]
      <</replace>>
  <</link>>
  @@

  


:: MorningBus
  <<include "DebugStats">>
  Steve decided he'd take his usual bus to work. Doesn't feel like walking it seems.

  @@#links;
  <<link "Take a seat only if it has no one next to it and try to keep it that way">>
      <<replace "#links">>\
        <<set _chance to arrayChoice([0,1])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addSocialDist(6)<</script>>
          Steve glares and quickly covers the seat next to him whenever he sees someone approach.
          It seems to work as people actually start avoiding getting too close to Steve!

          Mission successful! ...Right?
        <<elseif _chance == 1>> /* Random outcome 1 */
          <<script>>addHealth(-4)<</script>>
          Someone is approaching to seat next to Steve and no amount of hostile glaring seems to be enough to dissuade them.
          In a moment of anger, Steve springs up from his seat and starts berating the man for wanting to sit next to him.
          The man, apparently, is all too ready to engage Steve in this contest of shouting.

          Along the way, neither of them even had their masks on anymore.

          You were supposed to be careful, Steve.....
        <</if>>
      <</replace>>
  <</link>>
  <<link "Don't be picky with which seat you choose">>
      <<replace "#links">>\
        <<set _chance to arrayChoice([0,1,2,3])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addHealth(-2)<</script>>
          Oh no! Some noisy group of people sat near Steve and just started singing to their favourite tunes.

          <<if isCareless()>>
            <<script>>addSocialDist(-6)<</script>>
            What the?! And Steve started singing along with them!!
            <<if getMask()>>
              <<script>>addWariness(-3)<</script>>
              He even took off his mask!!
            <</if>>

            It IS a good song, but come on, Steve!
          <</if>>
        <<elseif _chance == 1>> /* Random outcome 1 */
          Seeing the vacant spot next to Steve, an elderly passaneger moved to take that seat.
          <<if isParanoid()>>
            <<script>>addSocialDist(8)<</script>>
            Steve doesn't seem like he wants to share the space. He just started yelling out of the blue, referring to the poor person as a "wrinkled walking biohazard".
            You know, people are staring, Steve.
          <<else>>
            <<script>>addWariness(6)<</script>>
            The person coughs from time to time.
            Every time that happens, Steve seems to try and schooch even further towards the bus window and away for the old fellow.
            Hopefully, that at least makes you a little more conscious of the danger you're in, Steve.
          <</if>>
        <<elseif _chance == 2>> /* Random outcome 2 */
          <<script>>addSocialDist(-2)<</script>>
          Someone else sits next to Steve.
          They engage in small talk.
          It's okay to keep interacting with people every now and then, but just make sure you do so safely.
        <<elseif _chance == 3>> /* Random outcome 3 */
          <<script>>addSocialDist(6)<</script>>
          Steve didn't mind talk a little bit, but he felt kind alone in the bus when nobody sat at his side. Maybe he's stinking for some reason?
        <</if>>
      <</replace>>
  <</link>>
  @@
  
  [[Work begins!|OfficePhase1]]


:: TeleworkAnnounce
  <<include "DebugStats">>
  Steve's boss just called him to work at home because of the rain, he doesn't need to worry about travel to work, if he doesn't want to!

  <<if isIsolated()>>
    Steve looks sort of down with the possibility of not going in person...
  <</if>>

  @@#links;
  <<link "Go back home">>
      <<replace "#links">>\
        <<script>>addSocialDist(6)<</script>>
        <<if isIsolated()>>
          Steve just picked up his umbrella and went to work anyways!?

          [[Uh... Steve, the rain, though...?|OfficePhase1]]
        <<else>>
          Delighted, Steve hurries back home. He is probably happier with not having to work than with being able to protect himself at home, though.
          What matters is that he'll be able to avoid taking risks.

          [[Telework begins!|TeleworkPhase]]
        <</if>>
      <</replace>>
  <</link>>
  <<link "Go to work anyways">>
      <<replace "#links">>\
        Steve decides to go to work anyway, despite what his boss told him
        <<set _chance to arrayChoice([0,1])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addHealth(-5)<</script>>
          And it rained indeed! As a result, Steve was soaking wet when he reached the office. Hopefully, this won't affect his health too much...
        <<elseif _chance == 1>> /* Random outcome 1 */
          Well, he managed to avoid the rain. That's good, but maybe this could have been an opportunity to practice social distancing.
        <</if>>

        [[Work begins!|OfficePhase1]]
      <</replace>>
  <</link>>
  @@


:: TeleworkPhase
  <<include "DebugStats">>
  <<include "StablePhaseCommon">>
  <<silently>>
    <<set $stable_passage to "TeleworkPhase">>
  <</silently>>
  <<if isParanoid()>>
    There, you're home. You're safe, now, Steve. Nothing can hurt you here, right? <b>right?</b>
  <<elseif isIsolated()>>
    Home.... Again... As Steve stares at his computer screen in his poorly lit room, he is, once again, confronted with the fact that the only human contact he'll have will be his colleagues zoom profile pictures on that screen.
    That is, IF they even have a meeting, that is..........
  <<else>>
    Well, working from home also feels good from time to time.
  <</if>>

  [[Start working|TeleworkPool]]


:: TeleworkPool
  
  <<include "DebugStats">>
  Working alone is nice and all, but it can be boring sometimes...

  Steve finds it a bit hard to concentrate and his mind, sometimes, wanders off a bit.

  <<silently>>
    /* <<set _eat_friends_event to either("SurfNet", "Idling", "TakeWalk")>> <-- I think this shouldn't be random, but a choice */
    /* TODO: surf net was going to write events with fake_news_array, similarly to the one in EatAlone
    Idling was gonna have just text with no real downsides or upsides
    TakeWalk was also gonna be the equivalent to the one in EatAlone, only at Steve's home or nearby outside
    Telework is supposed to be just boring, uneventful stuff */
  <</silently>>

  @@#links;
  <<link "Surf the net">>
      <<replace "#links">>\
        <<set _chance to arrayChoice([0,1,2,3,4])>>
        <<if _chance == 0>> /* Random outcome 0 (Healthy tips) */
          <<script>>addWariness(8)<</script>>
          <<set _result to arrayChoice([
            "Steve starts looking through lists of proper health care and precautions to take during the pandemic. Nicely done, Steve.",
            "Steve is reading the news. Doctors are, one again, warning people to take extra care when outside.",
            "It seems a new study came out, once again confirming the usefulness of properly washing your hands thouroughly. Make sure to keep it in mind!"
          ])>>
        <<elseif _chance == 1>> /* Random outcome 1 (Unhealthy tips from net) */
          <<script>>addWariness(-8)<</script>>
          <<set _result to arrayChoice(fake_news_array)>>
        <<elseif _chance == 2>> /* Random outcome 1 (Scary news) */
          <<script>>addWariness(16)<</script>>
          <<set _result to arrayChoice([
            "Steve is reading through the latest infection and death rates... And it's... not good. Try to stay calm, Steve.",
            "There are some countries whose situation is far worse from yours, Steve. It seems, juts thinking about it is giving him the chills!"
          ])>>
        <<elseif _chance == 3>> /* Random outcome 1 (Relax) */
          <<script>>addHealth(6)<</script>>
          <<set _result to arrayChoice([
            "Steve decided to spend his lunch break solely watching cat videos. Well, who doesn't like cat videos?",
            "Ooh great! A new episode from Steve's favourite series came out! Guess you know what you'll do right now, huh."
          ])>>
        <<elseif _chance == 4>> /* Random outcome 1 (Alone) */
          <<script>>addSocialDist(6)<</script>>
          <<set _result to arrayChoice([
            "Steve saw news about the dangers of becoming alone in this pandemic, and now he relates to his situation...",
            "After some telework, you just read news about feeling alone the entire day... That's sad."
          ])>>
        <</if>>
        _result
        <<silently>>

        /* <<include _eat_friends_event>> */

        <<set _result2 to arrayChoice([
          "The rest of the work went as usual. But Steve, you need to be careful to not telework everyday. You know that your boss don't like it that much.",
          "Working in pajamas has its advantages, however gaining money from going presential as well. We could manage to work on-line today, but we can just do this once in a while."
        ])>>
        <</silently>>
        _result2
        [[Go to Night|NightPhase]]
      <</replace>>
  <</link>>
  <<link "Relax a little bit">>
    <<replace "#links">>\
    <<script>>addHealth(1)<</script>>
    <<set _chance to arrayChoice([0,1,2,3])>>
        <<if _chance == 0 || _chance == 1>> /* Random outcome 0 (Healthy breath) (50% chance) (used to escape the softlock) */
          <<script>>addHealth(2)<</script>>
          <<script>>addWariness(-3)<</script>>
          <<set _result to arrayChoice([
            "It is good to relax to breath sometimes. Steve feels a little bit more relaxed",
            "A good pause is enough to restore Steve's energy!"
          ])>>
        <<elseif _chance == 2>> /* Random outcome (Steve finds an insect) */
          <<silently>>
            <<script>>addHealth(-8)<</script>>
            <<script>>addWariness(5)<</script>>
          <</silently>>

          <<set _result to arrayChoice([
            "Yikes! A wild menacing spider appeared! Steve is TERRIFIED of Arthropods and that gave him a mini-heart attack. He managed to make the creature flee in the end, but at what cost?",
            "Wait, Steve... Is that a SPIDER???? Stopping running in circles and think in a solution! Yeah, keep this dark creature away with your broom."
          ])>>
        <<elseif _chance == 3>> /* Random outcome (Steve discover he lost some money in the wallet) */
          <<script>>addMoney(-5)<</script>>
          <<set _result to arrayChoice([
            "Oh no! Steve just noticed that he lost a 5-bill! He has no idea in where it might have fallen.",
            "Steve looks at his wallet worried. I think he might have lost some money somewhere."
          ])>>
        <</if>>
        _result
        <<set _result2 to arrayChoice([
          "The rest of the work went as usual. But Steve, you need to be careful to not telework everyday. You know that your boss don't like it that much.",
          "Working in pajamas has its advantages, however gaining money from going presential as well. We could manage to work on-line today, but we can just do this once in a while."
        ])>>
        _result2

        [[Go to Night|NightPhase]]
      <</replace>>
  <</link>>
  <<link "Go take a walk in the interval.">>
      <<replace "#links">>\
        Steve decides to stretch his legs a bit and walk while he eats.
        
        <<set _chance to arrayChoice([0,1])>>
        <<if _chance == 0>> /* Random outcome 0 (Healthy walk) */
          <<script>>addHealth(4)<</script>>
          <<set _result to arrayChoice([
            "This walk felt amazing! Steve managed to dodge his maskless neighbours with perfection!",
            "Who could imagine that such a walk could feel so good, huh?"
          ])>>
        <<elseif _chance == 2>> /* Random outcome 1 (Unlucko) */
          <<script>>addHealth(-14)<</script>>
          <<set _result to arrayChoice([
            "Great! When turning in the corner, Steve just bumped into a coughing person. The time couldn't be more perfect!",
            "That immediately felt like a bad idea. It looks like the place where Steve chosen to go was doing a cosplay event of maskless characters."
          ])>>
        <</if>>
        _result

          <<silently>>

          /* <<include _eat_friends_event>> */

          <<set _result2 to arrayChoice([
            "The rest of the work went as usual. But Steve, you need to be careful to not telework everyday. You know that your boss don't like it that much.",
            "Working in pajamas has its advantages, however gaining money from going presential as well. We could manage to work on-line today, but we can just do this once in a while."
          ])>>
        <</silently>>
        _result2

        [[Go to Night|NightPhase]]
      <</replace>>
  <</link>>
  @@




:: OfficePhase1 
  <<include "DebugStats">>
  <<include "StablePhaseCommon">>
  <<silently>>
    <<set $stable_passage to "OfficePhase1">>
    <<script>>addSocialDist(-2)<</script>>
    <<set _result to arrayChoice([
      "Well that was a stressful morning. Steve is a regular person, so of course he's not too keen on working. Oh god, it's already 12:00?!",
      "Damn, that was a though work morning! At least it's lunch time, you can relax a little bit, Steve."
    ])>>
  <</silently>>

  _result

    /* --- Steve's Morning Actions --- */
  <<if getMask()>>
    [[Remove Mask|OfficeMaskOff]]
  <<else>>
    [[Put a mask on|OfficeMaskOn]]
  <</if>>
  [[Wash Hands|OfficeWash]]

  Well, this is lunch break after all. So, time to eat.
  It seems the ret of the guys are gathering again to eat together...

  [[Eat with friends|OfficeChooseEatFriends]]
  [[Eat alone|OfficeChooseEatAlone]]


:: OfficeMaskOn 
  /* Work in office mask on test. Being outside, Steve should put on a mask. */
  <<include "DebugStats">>
  /* this passage determines whether Steve puts on mask and shows the correct message */
  <<if isCareless()>>
    <<silently>>
      <<set _result to arrayChoice([
        "Not happening, it seems. Steve all the cool kids not wearing their masks, so he decides to do the same, apparently.",
        "Steve seems to think that, seeing as they're all locked in a closed space for hours, it's not really worth it wearing a mask anyway."
      ])>> /* add more variations inside the array */
    <</silently>>

    _result /* Display the resulting message */

    [[What the hell, Steve...|$stable_passage]]
  <<else>>
    <<silently>>
      <<script>>addHealth(2)<</script>>
      <<script>>setMask(true)<</script>>
    <</silently>>
    Steve puts his mask on.
    You are outside after all.

    [[Well done, Steve!|$stable_passage]]
  <</if>>


:: OfficeMaskOff 
  /* Work in office mask off test. Since he is outside, taking the mask off will result in adverse effects */
  <<include "DebugStats">>
  /* this passage determines whether Steve takes mask off and shows the correct message */
  <<if isParanoid()>>
    <<silently>>
      <<set _result to arrayChoice([
        "Steve is trembling just thinking about taking the mask off. In the end, he leaves it on.",
        "Not only does Steve NOT take the mask off, he puts on ANOTHER mask over the previous one. That might be overdoing it a bit.",
      ])>> /* add more variations inside the array */
    <</silently>>

    _result /* Display the resulting message */

    [[Well, yeah, maybe that's for the best, Steve|$stable_passage]]
    /*[[What the hell, Steve...|$stable_passage]]*/
  <<else>>
    <<silently>>
      <<script>>addHealth(-5)<</script>>
      <<script>>setMask(false)<</script>>
    <</silently>>
    His colleagues look healthy enough, right?
    Surely, none of them have covid, so it's fine... right?

    [[Hopefully, nothing bad will come of it|$stable_passage]]
  <</if>>


:: OfficeWash
  <<include "DebugStats">>
  /* Office time hand wash. Being just before eating, it's important to properly wash hands. */

  <<if isCareless()>>
    Steve doesn't really want to go through all the trouble of having to wash his hands for two minutes or whatever, it seems.
  <<else>>
    <<script>>addHealth(5)<</script>>
    Yes, well done, Steve! You should wash your hands both before and after eating. It's important to properly wash your hands now.
  <</if>>

  [[Back|$stable_passage]]


:: OfficeChooseEatAlone
  <<include "DebugStats">>

  <<if isIsolated() and randomChance(50)>>
    Wait, are you going to eat with them, after all? Steve, you know that you need to isolate yourself a little bit, right?

    [[Hey, Ste- Oh, there he goes...|EatFriendsPool]]
  <<else>>
    <<silently>>
      <<script>>addSocialDist(8)<</script>>
      <<script>>addWariness(3)<</script>>
    <</silently>>
    
    <<if isIsolated()>>
      Eating alone... Again... It's been so long that Steve feels like he's even part of the office staff. Do their friends even remember his name at this point?
    <<else>>
      Right! Eating alone. That's the healthy choice now, ha ha ha... ha....
    <</if>>

    <<if randomChance(10)>>
      <<silently>>
        /* Receiving a message event */
        <<set _result to arrayChoice([
          "Hey, Steve! You just received a message from your parents. They really love you, hum?",
          "Yoooo, isn't this a message from the girl you like? Way to go, man!"
        ])>>
      <</silently>>
      _result
      <<silently>>
        <<script>>addSocialDist(-2)<</script>>
        <<script>>addHealth(1)<</script>>
      <</silently>>
    <</if>>

    [[Let's eat, then|EatAlonePool]]
  <</if>>


:: OfficeChooseEatFriends
  <<include "DebugStats">>
  /* Choosing to eat with friends at work */
  <<if isParanoid()>>
    No, huh? Steve looks like he won't move an inch from his seat. He must be worried about his friends just casually eating together, passing germs between each other.

    [[Eating alone it is, then, Steve|EatAlonePool]]
  <<else>>
    <<silently>>
      <<script>>addSocialDist(-9)<</script>>
      <<script>>addHealth(-2)<</script>>
      <<script>>addWariness(-4)<</script>>

      <<set _result to arrayChoice([
        "Eating with friends is also good. So long as everyone follows the proper protocols, right, Steve?",
        "Everyone needs time with some friends. Enjoy while you can, but you should still remember to take care from now on."
      ])>>
    <</silently>>

    _result

    [[Let's eat, then|EatFriendsPool]]
  <</if>>


:: EatFriendsPool
  /* this passage will have the random events that Steve might do while eating with friends */
  <<nobr>>
  <<set _eat_friends_event to either("PandemicChat", "SmallChat")>>
  <</nobr>>
  <<include _eat_friends_event>>


:: PandemicChat
  <<include "DebugStats">>
  /* Events with friends talking about the pandemic. Might be both good and bad. */
  Steve's friends are talking about the pandemic, it seems.

  @@#links;
  <<link "Listen in">>
      <<replace "#links">>\
        <<script>>addSocialDist(4)<</script>>
        <<set _chance to arrayChoice([0,1,2])>>
        <<if _chance == 0>> /* Random outcome 0 (Bad advice) */
          <<silently>>
            <<script>>addWariness(-4)<</script>>
            <<set _result to arrayChoice([
              "Wait, one colleague just started saying that his friend's wife's neighbour took a vaccine that gave him cancer? Please do not believe in that, Steve. Steve?",
              "No, Steve, don't listen to Joe. He's talking about how vaccines will turn you into an aligator, again. His source is twitter, Steve! T-W-I-T-T-E-R!",
              "Covid is just a hoax for the government to be able to control people's actions and deprive them of their freedom?? No, Steve, don't listen to that!"
            ])>>
          <</silently>>
          _result
        <<elseif _chance == 1>> /* Random outcome 1 (Good advice) */
          <<silently>>
            <<script>>addWariness(8)<</script>>
            <<set _result to arrayChoice([
              "Ah, Jill is talking about her doctor husband, saying how hospitals are finding it harder and harder to treat everyone. \nThat's right, Steve, it's important to be careful.",
              "Oh, everyone's discussing what sort of precautions they all take in their daily lives. It's a good chance to learn to be more careful yourself, Steve!",
              "One person is saying a friend of theirs got covid yesterday. Thankfully, they weren't in contact, but still, no one's really safe from the virus, huh, Steve?"
            ])>>
          <</silently>>
        <<elseif _chance == 2>> /* Random outcome 1 (Scary advice) */
          <<silently>>
            <<script>>addWariness(20)<</script>>
            <<set _result to arrayChoice([
              "Everyone looks a bit down right now. They're talking about the new covid infection rates. They've been getting really high, really fast. Steve looks terrified right now",
              "Your country is relatively safe right now, but someone read that other countries that were getting better, suddenly had to go back to lockdown to counter the virus spread. Scary stuff, Steve.",
            ])>>
          <</silently>>
          _result
        <</if>>
        [[Well, lunch time is over, back to work!|OfficePhase2]]

      <</replace>>
  <</link>>
  <<link "Focus on your lunch">>
      <<replace "#links">>\
        <<script>>addSocialDist(4)<</script>>
        Steve decides to eat in silence, not interacting much in the conversation. He even scooches back a little, so as to distance himself from his maskless friends.

        His friends, of course, quickly forget he's even there. But at least, you took the proper precautions, right Steve!""
        [[Well, lunch time is over, back to work!|OfficePhase2]]

      <</replace>>
  <</link>>
  @@



:: SmallChat
  <<include "DebugStats">>
  /* Events with friends talking about the nothing in particular. Might be good to socialise, but bad for risks. */
  Steve's friends are talking about random stuff. They seem lively

  @@#links;
  <<link "Join in">>
      <<replace "#links">>\
        <<silently>>
          <<script>>addSocialDist(4)<</script>>
          <<set _chance to arrayChoice([0,1])>>
        <</silently>>
        <<if _chance == 0>> /* Random outcome 0 (Unhealthy friends) */
          <<silently>>
            <<script>>addHealth(-6)<</script>>
            <<set _result to arrayChoice([
              "Oh no, it seems the conversation got a bit too lively and they sort of forgot to keep their distance.\nSteve got caught up in it. Hope none of them are infected.",
              "Steve's friends are not even trying to keep a safe distance. This could be bad..."
            ])>>
          <</silently>>
          _result
        <<elseif _chance == 1>> /* Random outcome 1 (Socialise) */
          <<silently>>
            <<script>>addSocialDist(-8)<</script>>
            <<set _result to arrayChoice([
              "This is great! Everyone is having fun talking together, while also keeping a safe distance and protecting each other. Isn't it great to have just thoughtful colleagues, Steve.",
              "Steve looks like he's having a good time, socialising. Everyone's also taking the proper precautions, too, so it should be fine."
            ])>>
          <</silently>>
          _result
        <</if>>
        [[Well, lunch time is over, back to work!|OfficePhase2]]
      <</replace>>
  <</link>>
  <<link "Stay away from them a bit, that doesn't look too healthy">>
      <<replace "#links">>\
        <<script>>addSocialDist(8)<</script>>
        Steve decides to eat in silence, not interacting much in the conversation. He even scooches back a little, so as to distance himself from his maskless friends.

        His friends, of course, quickly forget he's even there. But at least, you took the proper precautions, right Steve!""
        [[Well, lunch time is over, back to work!|OfficePhase2]]
      <</replace>>
  <</link>>
  @@

  


:: EatAlonePool
  /* this passage will have the random events that Steve might do while eating with friends */
  <<include "DebugStats">>
  Steve is eating all alone... Time to entertain yourself with something.

  @@#links;
  <<link "Surf the net">>
      <<replace "#links">>\
        <<set _chance to arrayChoice([0,1,2,3,4])>>
        <<if _chance == 0>> /* Random outcome 0 (Healthy tips) */
          <<script>>addWariness(4)<</script>>
          <<set _result to arrayChoice([
            "Steve starts looking through lists of proper health care and precautions to take during the pandemic. Nicely done, Steve.",
            "Steve is reading the news. Doctors are, one again, warning people to take extra care when outside.",
            "It seems a new study came out, once again confirming the usefulness of properly washing your hands thouroughly. Make sure to keep it in mind!"
          ])>>
        <<elseif _chance == 1>> /* Random outcome 1 (Unhealthy tips from net) */
          <<script>>addWariness(-6)<</script>>
          <<set _result to arrayChoice(fake_news_array)>>
        <<elseif _chance == 2>> /* Random outcome 1 (Scary news) */
          <<script>>addWariness(8)<</script>>
          <<set _result to arrayChoice([
            "Steve is reading through the latest infection and death rates... And it's... not good. Try to stay calm, Steve.",
            "There are some countries whose situation is far worse from yours, Steve. It seems, juts thinking about it is giving him the chills!"
          ])>>
        <<elseif _chance == 3>> /* Random outcome 1 (Relax) */
          <<script>>addHealth(6)<</script>>
          <<set _result to arrayChoice([
            "Steve decided to spend his lunch break solely watching cat videos. Well, who doesn't like cat videos?",
            "Ooh great! A new episode from Steve's favourite series came out! Guess you know what you'll do right now, huh."
          ])>>
        <<elseif _chance == 4>> /* Random outcome 1 (Alone) */
          <<script>>addSocialDist(6)<</script>>
          <<set _result to arrayChoice([
            "Steve saw news about the dangers of becoming alone in this pandemic, and now he relates to his situation...",
            "New abous being too alone are all over the place, and now Steve is thinking about the topic and why the heck he was eating completely alone."
          ])>>
        <</if>>
        _result
        [[Well, lunch time is over, back to work!|OfficePhase2]]
      <</replace>>
  <</link>>
  <<link "Go take a walk through the hallway a bit.">>
      <<replace "#links">>\
        Steve decides to stretch his legs a bit and walk while he eats.
        
        <<set _chance to arrayChoice([0,1])>>
        <<if _chance == 0>> /* Random outcome 0 (Healthy walk) */
          <<script>>addHealth(4)<</script>>
          <<set _result to arrayChoice([
            "And it feels good! Steve also has a chance to eat by the window, so he's also getting a bit of fresh air.",
            "Thankfully, there's no one in the hall right now, so it's a pleasant walk."
          ])>>
          _result
        <<elseif _chance == 2>> /* Random outcome 1 (Unlucko) */
          <<script>>addHealth(-14)<</script>>
          <<set _result to arrayChoice([
            "Uh oh, Steve just crossed paths with someone coughing hard on the hall. They don't look so good......",
            "Hm, wrong choice it seems, the hall is crowded and there are even some people not wearing their masks! This could be dangerous."
          ])>>
          _result
          [[Well, lunch time is over, back to work!|OfficePhase2]]

        <</if>>
      <</replace>>
  <</link>>
  @@



:: OfficePhase2
  <<include "DebugStats">>
  <<include "StablePhaseCommon">>
  <<silently>>
    <<set $stable_passage to "OfficePhase2">>
    <<script>>addSocialDist(-2)<</script>>
    <<set _result to arrayChoice([
      "Onto another round of work, then! But first, should you do something, Steve?",
      "Now that you've nourished yourself, time to get ready to work again."
    ])>>
  <</silently>>

  _result

    /* --- Steve's Morning Actions --- */
  <<if getMask()>>
    [[Remove Mask|OfficeMaskOff]]
  <<else>>
    [[Put a mask on|OfficeMaskOn]]
  <</if>>
  [[Wash Hands|OfficeWash]]

  And after another stressful round of work, it's finally over.

  [[Prepare to leave|OfficeEndPool]]


:: OfficeEndPool
  /* this passage will have the random events that happen at the end of Steve's work */
  <<nobr>>
  <<script>>addMoney(2)<</script>>
  <<set _eat_friends_event to either("Overtime", "FriendsInvite", "WalkHome")>>
  <</nobr>>
  <<include _eat_friends_event>>


:: Overtime
  <<include "DebugStats">>

  As Steve was leaving, his boss stops him, saying they're a little behind and he was wondering if Steve would like to do overtime?
  
  @@#links;
  <<link "Accept overtime">>
      <<replace "#links">>\
        <<script>>addMoney(8)<</script>>
        <<set _chance to arrayChoice([0,1])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addSocialDist(6)<</script>>
          Steve reluctantly agrees.
          He sees all his colleagues leaving together however and starts considering if that was the best idea....
        <<elseif _chance == 1>> /* Random outcome 1 */
          <<script>>addHealth(-8)<</script>>
          There is still so much work to do, after all.... Steve is exhausted, maybe he shouldn't have accepted after all.....
        <</if>>
        [[Finally it's over|NightPhase]]
      <</replace>>
  <</link>>
  <<link "Refuse">>
      <<replace "#links">>\
        Steve politely refuses, verbally, but gives his boss the finger, mentally.

        <<set _chance to arrayChoice([0,1,2])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addMoney(-5)<</script>>
          His boss says he wasn't really asking him to do it. He also seems a bit annoyed that Steve tried to dodge work....
          Hope that won't show in your next salary evaluation, Steve...
        <<elseif _chance == 1>> /* Random outcome 1 */
          <<script>>addHealth(2)<</script>>
          And before his boss can say anything else, Steve is already out of the building. No way in hell, you'd work for another minute, Steve.
          You're feeling better already!
        <<elseif _chance == 2>> /* Random outcome 2 */
          <<script>>addSocialDist(2)<</script>>
          Managed to dodge work AND socially distance yourself from your boss. Nicely done, Steve!
        <</if>>
        [[Finally it's over|NightPhase]]
      <</replace>>
  <</link>>
  @@



:: FriendsInvite
  <<include "DebugStats">>

  As he's preparing to leave, Steve's friends invite him to hang out!

  That's not very safe, but Steve really likes to be with people. Still, maybe you shouldn't, Steve...

  @@#links;
  <<link "Go with them">>
      <<replace "#links">>\
        <<script>>addSocialDist(-10)<</script>>
        <<set _chance to arrayChoice([0,1,2])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addHealth(-8)<</script>>
          What have you done, Steve....

          Turns out their definition of "hanging out" is throwing a huge party!
          So many people came, in such a confined space, that Steve lost count on how many different people he interacted with.

          You're still in a pandemic, you know.
          There's no way no one in that party was infected, Steve!
        <<elseif _chance == 1>> /* Random outcome 1 */
          Steve's friends decide to have dinner at a nearby bar.

          Everything went pretty well, all things considered!
          Everyone kept their masks on and, while eating, actually kept a safe distance from each other. Good for you, Steve!
        <<elseif _chance == 2>> /* Random outcome 1 */
          <<script>>addHealth(-10)<</script>>
          Not good... As soon as they left the office, everyone took their masks off, but started talking and laughing way too close to each other.

          Maybe you should tell them to- Wha! No, Steve, don't take your mask off as well!
        <</if>>
        
        [[Time to return home|NightPhase]]
      <</replace>>
  <</link>>
  <<link "Go home">>
      <<replace "#links">>\
        <<script>>addSocialDist(15)<</script>>
        His friends say they understand and say goodbye to him.

        You really wanted to go with them, didn't you, Steve..... Well, you know that you can't hang out normally with people right now. It's dangerous!
        In fact, they are the ones who should be more responsible. Don't worry, there will be other times.

        Before starting his way back, Steve looks longingly at his friends as they disappear from sight. Look at them... So cheerful...

        [[Come on, Steve, let's go home|WalkHome]]
      <</replace>>
  <</link>>
  @@


:: WalkHome
  <<include "DebugStats">>

  Steve begins his walk back home. It's nighttime already, as usual.
  He considers taking the longer way home, or take a shortcut.
  
  @@#links;
  <<link "Longer way home">>
      <<replace "#links">>\
        <<set _chance to arrayChoice([0,1,2])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addHealth(4)<</script>>
          As he walks about, passing through still open stores and other establishments, Steve ponders about all the small businesses that suffered and, some, even had to close doors, due to the pandemic.

          But seeing those that still resist, no matter how much they're struggling, Steve feels a sense of renewed hopefulness and that cheer him up a bit.
        <<elseif _chance == 1>> /* Random outcome 1 */
          <<script>>addHealth(-4)<</script>>
          Steve walks around town a bit.

          He finds a friend with whom he dan't talked to in a while!
          ...Unfortunately the friend is not wearing a mask and is getting a bit too close for comfort.
        <<elseif _chance == 2>> /* Random outcome 1 */
          <<script>>addMoney(8)<</script>>
          Steve walks around town for a while.
          Suddenly, he notices something on the floor.
          
          It's a 10-bill! How lucky, Steve!
        <</if>>
        [[You're home!|NightPhase]]
      <</replace>>
  <</link>>
  <<link "Shortcut">>
      <<replace "#links">>\
        Steve decides to take a shorter way, passing through some back alleys and less crowded streets.

        <<set _chance to arrayChoice([0,1,2])>>
        <<if _chance == 0>> /* Random outcome 0 */
          <<script>>addHealth(5)<</script>>
          Since he cut way, he actually got home a bit earlier!

          Great! Now you can relax a bit, before having to prepare dinner and what not, Steve.
        <<elseif _chance == 1>> /* Random outcome 1 */
          <<script>>addMoney(-8)<</script>>
          <<script>>addHealth(-5)<</script>>
          It seems it wasn't a very good idea, though...

          Steve is confronted with someone pointing a knife at him. Steve's being mugged!!

          Well, Steve didn't really have much on him anyway, but it was still a scary experience.
          At least, the thief was wearing a mask, though...
        <<elseif _chance == 2>> /* Random outcome 2 */
          Before he knows it, Steve is already home! This day was so stressful, that Steve decides to just laze about on the couch, until he has to cook dinner.
        <</if>>
        [[You're home!|NightPhase]]
      <</replace>>
  <</link>>
  @@
  


:: GoParty
  <<include "DebugStats">>
  <<silently>>
    /* Used when Steve goes out after work */
    <<set _result to arrayChoice([
      "Damn, that was indeed a nice party! Wait, how much did it cost?",
      "I hope all people in here remembered to bring their masks, riiight?"
    ])>>
  <</silently>>
  _result
  <<silently>>
    <<script>>addHealth(-3)<</script>>
    <<script>>addMoney(-5)<</script>>
    <<script>>addSocialDist(-10)<</script>>
    <<script>>addWariness(-5)<</script>>
  <</silently>>

  [[Go home|NightPhase]]


:: NoParty
  <<include "DebugStats">>
  /* Used when the player rejects the party offer */
  <<set _result to arrayChoice([
    "That looked like a cool party, but you need to focus, Steve!",
    "Are you sure that you want to go there after such a tiresome day of work? Your bed is calling you."
  ])>>
  _result

  <<if isIsolated && randomChance(75)>>
    <<set _result to arrayChoice([
      "Wait, Steve, where are you going?!",
      "C'mon, Steve, go back here! Are you really sure that you are going to just ignore your fluffy bed at home?"
    ])>>
    _result

    [[Accompany Steve in the Party|GoParty]]
  <<else>>
    <<script>>addSocialDist(2)<</script>>
    [[Go home|NightPhase]]
  <</if>>


:: NightPhase
  <<include "DebugStats">>
  <<silently>>
    /* Used when Steve goes out after work */
    <<set _result to arrayChoice([
      "Today was a tiresome day, but at least you are free now.",
      "Finally at home, right? So, what do you want to do, Steve?"
    ])>>
    <<set $stable_passage to "NightPhase">>
  <</silently>>
  _result

  /* --- Steve's Night Actions --- */
  <<if getMask()>>
    [[Remove Mask|NightMaskOff]]
  <<else>>
    [[Put a mask on|NightMaskOn]]
  <</if>>
  [[Take a COVID test|TakeTest]]
  [[Wash Hands|NightWash]]

  After that, all that's left is for Steve to tuck himself into bed and rest up for the next day.

  [[Sleep|WakeUp]]


:: NightMaskOn 
  /* Night mask on test. Putting a mask on at night is not really healthy and increases Steve's paranoia */
  <<include "DebugStats">>
  /* this passage determines whether Steve puts on mask and shows the correct message */
  <<if isCareless()>>
    <<set _result to arrayChoice([
      "Steve won't put on a mask right now. It's nighttime, there is literally no one else in his house (this last thought causes Steve to reflect on his sad lonely life).",
      "If Steve is against putting a mask on during the day, he certainly won't do it at night. Steve skips right past the mask box."
    ])>> /* add more variations inside the array */

    _result /* Display the resulting message */

    [[Well... Yeah, it is night right now.|$stable_passage]]
  <<else>>
    <<silently>>
      <<script>>addHealth(-2)<</script>>
      <<script>>addWariness(20)<</script>>
      <<script>>setMask(true)<</script>>
    <</silently>>
    Steve put his mask on.
    It's true that its nightime and he is alone and he should probably take it off before going to bed, but... why not...
    Better safe than sorry, right Steve? Steve agrees a bit too quicky....

    [[Well done, Steve!|$stable_passage]]
  <</if>>


:: NightMaskOff 
  /* Night mask off test. Steve should take his mask off at night */
  <<include "DebugStats">>
  /* this passage determines whether Steve takes mask off and shows the correct message */
  <<if isParanoid()>>
    <<script>>addHealth(-2)<</script>>
    <<set _result to arrayChoice([
      "Steve has grown so accustomed to having the mask on, that he is finding it hard to take it off, even though it's nighttime. He decides to leave it on.",
      "It is nighttime... And there is no one there... But, for some reason, Steve is struggling with taking the mask off. It feels like the minute he does, covid will find a way inside him. In the end, he leaves it on."
    ])>> /* add more variations inside the array */

    _result /* Display the resulting message */

    [[Just don't go to bed with it, Steve...|$stable_passage]]
  <<else>>
    <<silently>>
      <<script>>addHealth(2)<</script>>
      <<script>>addWariness(-2)<</script>>
      <<script>>setMask(false)<</script>>
    <</silently>>
    Finally, you can take the mask off safely!

    [[Well, until a few hours, when you have to put it back on, of course.|$stable_passage]]
  <</if>>


:: NightWash
  <<include "DebugStats">>
  /* Night hand wash. Since it's night, so it's important to wash hands. */

  Steve just spent most of his day outside, touching strange doorknobs and handling unsanitised objects.
  It's a given that you should wash your hands, right now.

  <<if isCareless()>>
    <<script>>addHealth(-5)<</script>>
    Steve seems thinks it's probably fine, even if he doesn't wash, though. He probably didn't touch anything bad, right?
    Steve immediately proceeds to touch his face.
  <<else>>
    Steve thouroughly washes his hands, even though it tires him out, for the full duration of two birthday songs. Well done!
    <<script>>addHealth(4)<</script>>
  <</if>>

  [[Back|$stable_passage]]


:: GoodEnding1
  Steve rushes through his breakfast and excitedly leaves his house.

  His vaccine was scheduled to early in the morning, so he won't even have to skip work! ...wait, that's a bad thing...

  [[Anyway, off you go, Steve|GoodEnding2]]


:: GoodEnding2
  Upon reaching the vaccination site, Steve hurriedly gets in line to wait his turn.

  Though, he should be used to it by now, Steve can barely stand waiting. So close to being free!

  [[Finally, it's Steve's turn|GoodEnding3]]


:: GoodEnding3
  As the needle approaches his skin, Steve is suddenly reminded of how much he is afraid of needles and nearly passes out.
  Don't be such a baby, Steve.

  A slight prick, a tingling feeling in his arm and it's done, Steve! At long last. ...Steve? Come now, open your eyes, the needle is out already.

  [[Now to wait 30 minutes|GoodEnding4]]


:: GoodEnding4
  Steve just spent his 30 minutes reading conspiracy theories about vaccine side-effects.
  No backsies now, Steve! Moreover, THOSE. ARE. FAKE. STEVE.

  As Steve leaves the vaccination centre, he feels a sense of relief he hadn't felt in a good long while.

  [[...|GoodEnding5]]


:: GoodEnding5
  Yeah, well, that's great and all, Steve, but remember, this is only your first shot anyway.

  <<linkreplace "Oh... Right...">>
    Plus, having the vaccine doesn't make you immune, in the first place. It just means you are more protected.
    
    <<linkreplace "Yeah...">>
      Probably, anyway. There could also be the chance that it doesn't really work on you.

      Besides, you should still do your best to protect yourself and others.
      
      <<linkreplace "What...?">>
        That means no going to parties.

        <<linkreplace "...">>
          Or forgetting your mask.

          <<linkreplace "...Still a mask...?">>
            And remember to keep washing your hands, thouroughly, of course!

            You know, wetting them with water.
            <<linkappend "Applying Soap">>
              <<linkappend "Rubbing them together">>
                <<linkappend "Washing the back of your hand">>
                  <<linkappend "Between the fingers">>
                    <<linkappend "Both your hands, of course">>
                      <<linkappend "And your palms">>
                        <<linkappend "Rubbing the tip of your fingers">>
                          <<linkappend "And thumbs!">>
                            And finally rinsing and drying them.
                            <<linkappend "And you're done!">>
                              If you remember to use a disposable towel to dry your hands and turn off the tap with.
                              Otherwise, maybe you should wash them again.

                              In any case, well done, Steve.

                              <b>Maybe getting the vaccine won't really change your life from now on</b>, but if you don't focus on that and, instead, think about how, probably, safer you are, you'll be fine!

                              <<linkappend "Well! Then until the next vaccine shot.">>
                                
                                Oh! By the way, you should on to work, it's almost time for you to start!

                                <<linkreplace "THE END">>THE END...?<</linkreplace>>
                              <</linkappend>>
                            <</linkappend>>
                          <</linkappend>>
                        <</linkappend>>
                      <</linkappend>>
                    <</linkappend>>
                  <</linkappend>>
                <</linkappend>>
              <</linkappend>>
            <</linkappend>>
          <</linkreplace>>
        <</linkreplace>>
      <</linkreplace>>
    <</linkreplace>>
  <</linkreplace>>


:: CarelessEnding1
  Wait... Steve, are you not going to get your shot?

  Oh no... Is it because of all those conspiracy theories you've been reading about??

  [[Steve! The vaccine WON'T inject you with micro trackers to let the government spy on you|CarelessEnding2]]


:: CarelessEnding2
  OR make turn you into a man-lizard hybrid. That's just stupid!

  [[Steve doesn't seem to care, it seems|CarelessEnding3]]


:: CarelessEnding3
  As Steve goes about his normal business, as he would have any other day, fully confident that he won't be corrupted by the secret mind-controlling toxins the vaccine puts inside you, his best chance to finally be protected against this virus just slips away.

  Congratulations, Steve, you've become another one of the careless morons that put everyone else at risk, believing in everything they hear from other careless morons.

  Hopefully, the next person will try to be a little more sensible and realise that most of what you read on the internet is a bunch of baseless <<linkreplace "bullsh*">>crap<</linkreplace>>

  <<linkappend "THE END">>

    Obviously, the next day, Steve caught covid. He handled it pretty badly, resulting in him dying.
  <</linkappend>>


:: PanickEnding1
  ...Steve? Are you not going to get ready to leave?

  [[Uh oh...|PanickEnding2]]


:: PanickEnding2
  Seems like doesn't plan on leaving his house anytime soon. Or ever.

  The outside is nothing but danger.

  Even if he gets the vaccine, there's no guarantee he won't get infected later on.

  [[Besides|PanickEnding3]]


:: PanickEnding3
  If other people don't get vaccinated, eventually, the virus will continue spreading and, when the effects of the vaccine wear off, it'll come back!!

  [[The vaccine won't change anything!!!|PanickEnding4]]


:: PanickEnding4
  //''PEOPLE CAN'T BE TRUSTED

  THE VACCINE ITSELF CAN'T BE TRUSTED

  IF STEVE LEAVES HE HOUSE, HE'LL BE VULNERABLE! HE'LL BE EXPOSED!!!!''//

  [[THERE IS ONLY ONE CHOICE|PanickEnding5]]


:: PanickEnding5
  //Steve has been preparing for this for a while now...

  He's been stockpiling on the necessary supplies!

  Water, canned beans, industrial sized barrels of sanitiser, medicine.
  IT'S ALL IN HIS HOUSE!

  There's no need to go outside... There's no need to go to work if you already have everything you need, inside...//

  <<linkappend "//Steve has food//">>
    <<linkappend "//Steve has water//">>
      <<linkappend "//AND TOILET PAPER!!//">>

        //Steve can endure... ''AS LONG AS IT TAKES''//

        ...Guess you couldn't handle the stress very well, huh, Steve...

        <<linkappend "THE END">>

          Just a few days later, Steve's supplies ran out... Except for the toilet paper. He still refused to leave his house, though, resulting in him getting sick and dying because of that. But not of covid!
        <</linkappend>>
      <</linkappend>>
    <</linkappend>>
  <</linkappend>>


:: PartyEnding1
  Not going to the vaccine?? How come???

  [[Brunch with your friends???!!|PartyEnding2]]


:: PartyEnding2
  You should be practicing social distancing, Steve!

  This is the opposite of that! And on the vaccination day, no less!

  [[Should you really do this??|PartyEnding3]]


:: PartyEnding3
  Steve acknowledges that the pandemic is dangerous and there is a risk.

  <<linkappend "But he is absolutely not worried!">>

    He knows he'll be fine! He'll be protected! <<linkappend "By what?">>
      //THE POWER OF FRIENDSHIP//


      ...

      If you say so, Steve.....

      <<linkappend "THE END">>

        Turns out someone one of Steve's friends was infected and didn't tell anyone. Because of that, Steve got really sick and died.
      <</linkappend>>
    <</linkappend>>
  <</linkappend>>


:: DepressedEnding1
  Wait, you don't look so good, Steve.

  [[Something on your mind?|DepressedEnding2]]


:: DepressedEnding2
  Steve has been away from people for so long that he no longer cares about anything.

  It seems the crushing loneliness of not being with his friends and loved ones really got to him.

  [[Does it even matter anymore...|DepressedEnding3]]


:: DepressedEnding3
  How long has it been since he's seen anyone other than his own reflection in the mirror.

  <<linkappend "Steve misses his friends at work">>
    <<linkappend "And his friends outside work">>
      <<linkappend "His family">>
        Do they even remember him anymore...?

        Will the vaccine really change anything? After all, there's no guarantee they'll get vaccinated.
        Even if they do, they'll probably still have to distance themselves for a good while longer.

        <<linkappend "This is too much for Steve to endure...">>

          He doesn't want to live in a world like this.
          Because this is not really living, anyway.

          Goodbye, cruel world!!!

          <<linkappend "THE END">>

            Steve ended up jumping off a cliff in desperation from a little too much social distancing.
            At least, he didn't get infected, right...?
          <</linkappend>>
        <</linkappend>>
      <</linkappend>>
    <</linkappend>>
  <</linkappend>>


:: SickEnding1
  Oh no...

  It happened...

  It seems Steve is very sick right now...

  [[He can barely get out of bed|SickEnding2]]


:: SickEnding2
  It is definetely covid, Steve...

  You haven't been very careful lately, have you...?

  You should have been more cautious!

  <<linkappend "You know">>
    <<linkappend "Wearing a mask">>
      <<linkappend "Washing your hands">>
        <<linkappend "Socially distancing yourself">>
          <<linkappend "Even if it's hard">>

            Well, nothing to be done now. Your really shouldn't exhert yourself now.

            You'll be going to the hospital once you can move, though.

            Seems the vaccine will have to wait.

            <<linkappend "THE END">>

              Steve ended up not resisting the virus and died. Oopsie Poopsie. Better luck next time.
            <</linkappend>>
          <</linkappend>>
        <</linkappend>>
      <</linkappend>>
    <</linkappend>>
  <</linkappend>>


:: OverconfidentEnding1
  Don't need the vaccine???

  [[What does that mean??|OverconfidentEnding2]]


:: OverconfidentEnding2
  Well, it's true that you've been in top shape lately, but don't you think that's a bit too much optimism??

  Steve reasons that if he hasn't caught the virus until now, he probably won't anymore.

  <<linkappend "Maybe, he's even immune!">>

    Besides, this just means that what he's been doing so far has been working!
    
    <<linkappend "He just needs to keep going like this and he'll be just fine!">>
      <<linkappend "Let the virus at him!">>
        <<linkappend "Let the next pandemic begin already">>
          Steve will tough it all out!

          Nothing can stop him! Wooooooooo!

          ...And there he went.

          <<linkappend "THE END">>

            The following week, the infection rates went up and Steve got infected.
            <<linkappend "He didn't die, though!">>
              Until the next month, when he got infected again and, then, died.
            <</linkappend>>
          <</linkappend>>
        <</linkappend>>
      <</linkappend>>
    <</linkappend>>
  <</linkappend>>


:: BrokeEnding1
  It seems Steve isn't really thinking about the vaccine right now....

  [[His savings are all spent|BrokeEnding2]]


:: BrokeEnding2
  As he looks at his expenses record of this month, he feels chills just thinking about the next one.

  [[He has to do something about this fast|BrokeEnding3]]


:: BrokeEnding3
  Oh no, Steve spent o much time looking for another job to get more money, that he forgot about his actual job.

  <<linkappend "He remembered because his boss sent him a message">>
    He says he's gonna fire him!!

    <<linkappend "Oh crap!">>
      He's had enough with Steve's incompetence and says he's getting sacked!

      And for all of this to happen on vaccination day....
      What an unlucky coincidence, huh......

      <<linkappend "THE END">>

        Steve also forgot about being careful about the virus, because of all that.
        He ended up getting sick and, since he had no money for medicine or doctors, he died.

      <</linkappend>>
    <</linkappend>>
  <</linkappend>>


:: RichEnding1
  Vaccines are for poor people??

  [[What are you talking about??|RichEnding2]]


:: RichEnding2
  Steve has been making so much money lately, he shouldn't have to worry about poor people problems like viruses and all that.

  He needs to think BIG now.

  <<linkappend "Like what his first sports car is gonna be.">>
    <<linkappend "Or what kind of boat he'll get.">>
      <<linkappend "Or what supermodel he's gonna date, now">>

        So many questions!

        <<linkappend "But first, to do the only sensible thing possible when one has a lot of money.">>
          
          GAMBLING!

          To get more money!

          And after that, to get even more money AGAIN!

          //''TO THE CASINO!!''//

          <<linkappend "...">>
            Um, you kinda have your vaccine today...?

            <<linkappend "THE END">>

              Steve ended up betting his entire fortune on the first round.
              <<linkappend "He lost it all.">>
                Also, turns out one of the casino people was infected. Steve got covid and died.
              <</linkappend>>
            <</linkappend>>
          <</linkappend>>
        <</linkappend>>
      <</linkappend>>
    <</linkappend>>
  <</linkappend>>


:: ResetGame
  <<script>>UISystem.restart()<</script>>

:: StoryInit {"position":"300,100","size":"100,100"}
/* define your story variables here */


:: StoryInterface {"position":"100,100","size":"100,100"}
<div class="header">
	<div id="header-text" data-passage="header-text"></div>
	<div id="function-menu">
		<span id="menu" class="lnr lnr-menu"></span>
		<span id="settings" class="lnr lnr-cog"></span>
		<span id="saves" class="lnr lnr-download"></span>
		<span id="restart" class="lnr lnr-redo"></span>
	</div>
</div>

<div id="story">
	<div id="passages"></div>
</div>

<div class="footer">
	<span id="up" class="lnr lnr-chevron-up"></span>
	<span id="footer-menu" data-passage="footer-menu"></span>
	<div class="mobile-menu">
	 <span id="mob-menu" class="lnr lnr-menu"></span>
		<div id="mob-function-menu">
		 <span id="mob-settings" class="lnr lnr-cog"></span>
		 <span id="mob-saves" class="lnr lnr-download"></span>
		 <span id="mob-restart" class="lnr lnr-redo"></span>
		</div>
	 <span id="mob-footer-menu" data-passage="footer-menu"></span>
	</div>
</div>


:: Widgets [widget] {"position":"200,100","size":"100,100"}
/* custom widgets go in here */
<<widget "are">><<switch $plural>><<case true>>are<<case false>>is<</switch>><</widget>>
<<widget "were">><<switch $plural>><<case true>>were<<case false>>was<</switch>><</widget>>
<<widget "s">><<switch $plural>><<case true>><<case false>>s<</switch>><</widget>>
<<widget "es">><<switch $plural>><<case true>><<case false>>es<</switch>><</widget>>
<<widget "re">><<switch $plural>><<case true>>re<<case false>>s<</switch>><</widget>>
<<widget "ve">><<switch $plural>><<case true>>ve<<case false>>s<</switch>><</widget>>


:: credits {"position":"300,200","size":"100,100"}
[[Sugarcube 2 Template|https://awmorgan.itch.io/twine-sugarcube-template]]

[[Sugarcube 2 Documentation|https://www.motoslave.net/sugarcube/2/docs]]

[[OpenDyslexic Font by Abbie Gonzalez|https://opendyslexic.org]]

[[Notify Macro by Chapel|https://github.com/ChapelR/custom-macros-for-sugarcube-2]]

[[Live Update Macro by Cycy|https://github.com/cyrusfirheir/cycy-wrote-custom-macros]]


:: footer-menu {"position":"200,200","size":"100,100"}
<<nobr>>
<li><<link "credits">><<script>>
	Dialog.setup("Credits");
	Dialog.wiki(Story.get("credits").processText());
	Dialog.open();
<</script>><</link>></li>
<</nobr>>


:: header-text {"position":"100,200","size":"100,100"}
<span class="title">Pandemic</span>
<span class="author">by Lucius Vinicius and Pedro Valério</span>


:: StoryScript [script]
// ------------- Our true code ---------------
// --------------------
// || --- Config --- ||
// --------------------

// failsafe error message
window.logVariableError = function(variable) {
  console.error("Could not declare "+variable+" in this namespace");
}

// The following constants are used in different contexts (because their values were the same anyways)

// lowest limit for checking stat values
if (!window.LOWEST_STAT) window.LOWEST_STAT = 8;
else logVariableError("LOWEST_STAT")

// lower limit for checking stat values
if (!window.MIDLOW_STAT) window.MIDLOW_STAT = 14;
else logVariableError("MIDLOW_STAT")

// upper limit for checking stat values
if (!window.MIDHIGH_STAT) window.MIDHIGH_STAT = 26;
else logVariableError("MIDHIGH_STAT")

// highest limit for checking stat values
if (!window.HIGHEST_STAT) window.HIGHEST_STAT = 32;
else logVariableError("HIGHEST_STAT")

// collection of fake news
if (!window.fake_news_array) window.fake_news_array = [
  "Huh... Steve just found a post about a guy saying he got better from covid through sheer force of will. That can't be right...",
  "More reports of people saying that they took vaccines are now magnetic. ...... Steve, please, don't trust that...",
  "Steve just entered a news website called 'Wolf News'. They're saying that vaccines can impair your fertility...?? Steve! that's obviously a lie, don't buy that!",
  "Steve is reading on 'Wolf News' that vaccines can GIVE you covid. Steve! Do you really think that's true?!",
  "Another post saying that there is, in fact, no pandemic at all.... Steve! No! You've millions of those and they're all fake!",
  "The president is speaking again. He's saying that injecting bleach into your body might be enough to stop the virus. Steve, don't you dare try that at home."
];
else logVariableError("fake_news_array")

// the last day of the game
if (!window.END_DAY) window.END_DAY = 4; // TODO: change this to an appropriate value (one week?)
else logVariableError("END_DAY")

window.getRemainingDays = function() {
  return END_DAY - _day;
}


// -------------------
// || --- Stats --- ||
// -------------------

// Base stats
if (!window._default_stat) window._default_stat = 20;
else logVariableError("_default_stat")

if (!window._max_stat) window._max_stat = 40;
else logVariableError("_max_stat")

if (!window._min_stat) window._min_stat = 0;
else logVariableError("_min_stat")

// wariness (or carefulness)
if (!window._wariness) window._wariness = window._default_stat;
else logVariableError("_wariness")
window.getWariness = function() {
  return _wariness;
}
window.addWariness = function(toAdd) {
  _wariness = clamp(_wariness + toAdd, _min_stat, _max_stat);
}
window.isCareless = function() {
  return _wariness < MIDLOW_STAT
}
window.isParanoid = function() {
  return _wariness > MIDHIGH_STAT
}
window.isPanick = function() {
  return _wariness > HIGHEST_STAT
}

// social_dist
if (!window._social_dist) window._social_dist = window._default_stat;
else logVariableError("_social_dist")
window.getSocialDist = function() {
  return _social_dist;
}
window.addSocialDist = function(toAdd) {
  _social_dist = clamp(_social_dist + toAdd, _min_stat, _max_stat);

}
window.isIsolated = function() {
  return _social_dist > MIDHIGH_STAT
}
window.isDepressed = function() {
  return _social_dist > HIGHEST_STAT
}
window.isNotDistance = function() {
  return _social_dist < MIDLOW_STAT
}

// health
if (!window._health) window._health = window._default_stat;
else logVariableError("_health")
window.getHealth = function() {
  return _health;
}
window.addHealth = function(toAdd) {
  _health = clamp(_health + toAdd, _min_stat, _max_stat);
}
window.isUnhealthy = function() {
  return _health < MIDLOW_STAT
}
window.isSick = function() {
  return _health < LOWEST_STAT
}
window.isOverconfident = function() {
  return _health > HIGHEST_STAT
}

// money
if (!window._money) window._money = window._default_stat;
else logVariableError("_money")
window.getMoney = function() {
  return _money;
}
window.addMoney = function(toAdd) {
  _money = clamp(_money + toAdd, _min_stat, _max_stat);
}
window.isPoor = function() {
  return _money < MIDLOW_STAT
}
window.isBroke = function() {
  return _money < LOWEST_STAT
}
window.isRich = function() {
  return _money > HIGHEST_STAT
}

// day
if (!window._day) window._day = 0;
else logVariableError("_day")
window.getDay = function() {
  return ("0" + _day).slice(-2); // returns "0 + day" if day < 10 or "day" otherwise
}
window.goToNextDay = function() {
  _day += 1
}
// --- Non-Numeric ---

// whether Steve has mask on
if (!window._has_mask) window._has_mask = false;
else logVariableError("_has_mask")
window.getMask = function() {
  return _has_mask;
}
window.setMask = function(onoff) {
  _has_mask = onoff;
}

// whether Steve taken test in the current stable phase
if (!window._has_test) window._has_test = false;
else logVariableError("_has_test")
window.getTest = function() {
  return _has_test;
}
window.setTest = function(onoff) {
  _has_test = onoff;
}

// whether Steve has washed hands in the current stable phase
if (!window._has_washed) window._has_washed = false;
else logVariableError("_has_washed")
window.getWashed = function() {
  return _has_washed;
}
window.setWashed = function(onoff) {
  _has_washed = onoff;
}


// -------------------
// || --- Utils --- ||
// -------------------

// return a random int between min (inclusive) and max (inclusive)
window.randint = function(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
}

// return a random element from an array
window.arrayChoice = function(array) {
  let ix = randint(0, array.length - 1); // choose random index
  return array[ix];
}

// return boolean for random probability chance (in %)
window.randomChance = function(probability) {
  return Math.random() < probability/100;
}

// clamp of value in range (inclusive)
window.clamp = function(num, min, max) {
  return Math.min(Math.max(num, min), max);
}



// ------------- TEMPLATE SHENANIGANS + CSS bellow (you can probably ignore everything below Pedro) --------------
// import linearicons
importStyles(
	"https://cdn.linearicons.com/free/1.0.0/icon-font.min.css");
// end linearicons

// reset passage to top
$(document).on(":passagedisplay", function() {
	$("#passages").scrollTop(0);
});
// end reset passage

// function menu
$(document).ready(function() {
	$("#saves").click(function() {
		UI.saves();
	});	
	$("#settings").click(function() {
		UI.settings();
	});
	$("#restart").click(function() {
		UI.restart();
	});	
	$("#back").click(function() {
		Engine.backward();
	});
	$("#mob-saves").click(function() {
		UI.saves();
	});
	$("#mob-settings").click(function() {
		UI.settings();
	});
	$("#mob-restart").click(function() {
		UI.restart();
	});	
});
// function menu

// force fullscreen portrait mode on mobile
function lock (orientation) {
	if (document.documentElement.requestFullscreen) {
    document.documentElement.requestFullscreen();
  } else if (document.documentElement.mozRequestFullScreen) {
    document.documentElement.mozRequestFullScreen();
  } else if (document.documentElement.webkitRequestFullscreen) {
    document.documentElement.webkitRequestFullscreen();
  } else if (document.documentElement.msRequestFullscreen) {
    document.documentElement.msRequestFullscreen();
  }
	screen.orientation.lock(orientation);
};
// end force fullscreen

// tag passage 'noreturn' to avoid return loop errors
$(document).on(':passagestart', function (ev) {
    if (!ev.passage.tags.includes('noreturn')) {
        State.variables.return = ev.passage.title;
    }
});
// end noreturn

// autosaves - tag passage 'autosave' to trigger saving
config.saves.autosave = true;
config.saves.isAllowed = function () {
	if (tags().includes('noreturn')) {
		return false;
	}
	return true;
};
// end autosaves

// name saves - allows players to change name of save file
Config.saves.onSave = function (save, details) {
	if (settings.autoname) {
		save.title = State.getVar("$chapter");
	} else if (details.type == "autosave") {
		save.title = "Autosave";
	} else {
		save.title = prompt("Enter Save Name:", save.title);
	}
}
// end name saves

// STAT BARS (just an example!)//
// stat one
$(document).on(":passagedisplay", function() {
	$("#story").scrollTop(0);
	var statbarStat = State.getVar("$statone") + "%";
	$("#statone-stat").attr("style", "width: " + statbarStat);
});
// end stat one

//SETTINGS//
// change font size
var settingFontSize = ["100%", "130%", "150%"];
var resizeFont = function() {
	var size = document.getElementById("passages");
	switch (settings.fontSize) {
		case "100%":
			size.style.fontSize = "100%";
			break;
	}
	switch (settings.fontSize) {
		case "130%":
			size.style.fontSize = "130%";
			break;
	}
	switch (settings.fontSize) {
		case "150%":
			size.style.fontSize = "150%";
			break;
	}
};
Setting.addList("fontSize", {
	label		: "Change font size",
	list		: settingFontSize,
	onInit		: resizeFont,
	onChange	: resizeFont
});
// end change font size

// change font family
var settingFontFamily = ["Serif","Sans-serif","OpenDyslexic"];
var fontFamily = function() {
	var $html = $("html");
		$html.removeClass("serif sansserif opendyslexic");
	switch (settings.fontFamily) {
		case "Sans-serif":
			$html.addClass("sansserif");
			break;
		case "Serif":
			$html.addClass("serif");
			break;
			case "OpenDyslexic":
			$html.addClass("opendyslexic");
			break;
	}
};
Setting.addList("fontFamily", {
	label		: "Change font style",
	list		: settingFontFamily,
	default: "Sans-serif",
	onInit		: fontFamily,
	onChange	: fontFamily
});
// end change font family

// change theme
var settingThemeNames = ["Dark", "Light"];
var settingThemeHandler = function () {
	var $html = $("html");
	$html.removeClass("dm");
	switch (settings.theme) {
	case "Dark":
		$html.addClass("dm");
		break;
	}
};
Setting.addList("theme", {
	label    : "Switch display mode",
	list     : settingThemeNames,
	default	 : "Light",
	onInit   : settingThemeHandler,
	onChange : settingThemeHandler
});
// end change theme

// name saves toggle
Setting.addToggle("autoname", {
	label : "Autoname saves",
	default  : true,
}); 
// end name saves toggle


// enable/disable dialog tags toggle
var settingDialogTags = function () {
	if (settings.dialogtags) {
		State.variables.choice_labels = true;
		State.variables.flirt_label = '— &#9825;';
		State.variables.info_label = '— &#8634;';
		$(document).trigger(":liveupdate");
	}
	else {
		State.variables.choice_labels = false;
		State.variables.flirt_label = '';
		State.variables.info_label = '';
		$(document).trigger(":liveupdate");
	}
};
// end dialog tags

//MACROS//
// notify.min.js, for SugarCube 2, by Chapel
// v1.1.1, 2021-01-22, 404cc7678295ca61a8b0b8bc3fa5d54dba6ac858
;!function(){var s=/\d+m?s$/;function e(s,e,t){"string"==typeof s&&("number"!=typeof e&&(e=!1),$(document).trigger({type:":notify",message:s,delay:e,class:t||""}))}$(document.body).append("<div id='notify'></div>"),$(document).on(":notify",(function(s){s.message&&"string"==typeof s.message&&(s.message.trim(),s.class?"string"==typeof s.class?s.class="open macro-notify "+s.class:Array.isArray(s.class)?s.class="open macro-notify "+s.class.join(" "):s.class="open macro-notify":s.class="open macro-notify",s.delay?("number"!=typeof s.delay&&(s.delay=Number(s.delay)),Number.isNaN(s.delay)&&(s.delay=2e3)):s.delay=2e3,$("#notify").empty().wiki(s.message).addClass(s.class),setTimeout((function(){$("#notify").removeClass()}),s.delay))})),Macro.add("notify",{tags:null,handler:function(){var t=this.payload[0].contents,a=!1,n=!1;if(this.args.length>0){var i=s.test(this.args[0]);"number"==typeof this.args[0]||i?(a=i?Util.fromCssTime(this.args[0]):this.args[0],n=this.args.length>1&&this.args.slice(1).flatten()):n=this.args.flatten().join(" ")}e(t,a,n)}}),setup.notify=e}();
// end notify.min.js

// live update js by Cycy
(function () {
	"use strict";
	$(document).on(":liveupdate", function () {
		$(".macro-live").trigger(":liveupdateinternal");
	});
	Macro.add(['update', 'upd'], {
		handler: function handler() {
			$(document).trigger(":liveupdate");
		}
	});
	Macro.add(['live', 'l', 'lh'], {
		skipArgs: true,
		handler: function handler() {
			if (this.args.full.length === 0) {
				return this.error('no expression specified');
			}
			try {
				var statement = this.args.full;
				var result = toStringOrDefault(Scripting.evalJavaScript(statement), null);
				if (result !== null) {
					var lh = this.name === "lh";
					var $el = $("<span></span>").addClass("macro-live").wiki(lh ? Util.escape(result) : result).appendTo(this.output);
					$el.on(":liveupdateinternal", this.createShadowWrapper(function (ev) {
						var out = toStringOrDefault(Scripting.evalJavaScript(statement), null);
						$el.empty().wiki(lh ? Util.escape(out) : out);
					}));
				}
			} catch (ex) {
				return this.error("bad evaluation: " + (_typeof(ex) === 'object' ? ex.message : ex));
			}
		}
	});
	Macro.add(['liveblock', 'lb'], {
		tags: null,
		handler: function handler() {
			try {
				var content = this.payload[0].contents.trim();
				if (content) {
					var $el = $("<span></span>").addClass("macro-live macro-live-block").wiki(content).appendTo(this.output);
					$el.on(":liveupdateinternal", this.createShadowWrapper(function (ev) {
						$el.empty().wiki(content);
					}));
				}
			} catch (ex) {
				return this.error("bad evaluation: " + (_typeof(ex) === 'object' ? ex.message : ex));
			}
		}
	});
})();
// end live update js

:: StoryStylesheet [stylesheet]
  @import url('https://fonts.googleapis.com/css2?family=Montserrat&family=Roboto+Slab&family=Monoton&display=swap');

  @font-face {
    font-family: "Open Dyslexic";
    src: url("https://dl.dropbox.com/s/z61rc6kecqzn2pm/OpenDyslexic-Regular.woff2")format("woff2"),
    url("https://dl.dropbox.com/s/7utsi12557865ty/OpenDyslexic-Regular.woff")format("woff"),
      url("https://dl.dropbox.com/s/1q7eh2yte04g3z5/OpenDyslexic-Regular.otf")format("otf");
  }

  /*put your theme colors & fonts here so that you don't have to type the codes over and over again!*/
  :root {
    /*light mode (default)*/
    --bg: #e8e8e8;
    --bg2: #f4f4f2;
    --menu: #ab9eae;
    --text: #222;
    --accent: #e8e8e8;
    /*dark mode*/
    --dm-bg: #212224;
    --dm-bg2: #2c2c2c;
    --dm-menu: #607d8b;
    --dm-text: #efefef;
    --dm-accent: #212224;
    --dm-link: #00bcd4;
    --dm-link-hover: #00ffff;
    /*fonts*/
    --special: "Monoton", cursive;
    --serif: "Roboto Slab", serif;
    --sansserif: "Montserrat", sans-serif;
    --opendyslexic: "Open Dyslexic", sans-serif;
  }

  /*basics*/
  body {
    background-color: var(--bg);
    color: var(--text);
    height: 100vh;
    width: 90vw;
    max-width: 1400px;
    display: flex;
    align-items: center;
    overflow: hidden;
    margin: 0 auto;
  }
  .dm body {
    background-color: var(--dm-bg);
    color: var(--dm-text);
  }
  #ui-bar {
    display: none;
  }
  #story {
    background-color: var(--bg);
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    font-size: .9em;
    margin: 0 auto;
  }
  .dm #story {
    background-color: var(--dm-bg);
  }
  .serif .passage {
    font-family: var(--serif);
  }
  .sansserif .passage {
    font-family: var(--sansserif);
  }
  .opendyslexic .passage {
    font-family: var(--opendyslexic);
  }
  .passage {
    line-height: 200%;
    font-size: 1em;
    letter-spacing: 0.05em;
  }
  #passages {
    background-color: var(--bg2);
    max-height: 60%;
    width: 80%;
    overflow-y: auto;
    box-sizing: border-box;
    border: 1.8em solid var(--bg2);
    margin: 50px auto;
    padding: 0 1.2em .5em 2em;
  }
  .dm #passages {
    background-color: var(--dm-bg2);
    border: 2em solid var(--dm-bg2);
  }
  #story hr {
    border: none;
    height: 2px;
    margin-bottom: 1.5em;
  }
  #story hr::before {
    background-color: var(--menu);
    content: "";
    display: block;
    height: 2px;
    width: 100%;
  }
  .dm #story hr::before {
    background-color: var(--dm-menu);
  }

  /*scrollbar*/
  #passages::-webkit-scrollbar {
    width: 3px;
  }
  #passages::-webkit-scrollbar-track {
    background-color: var(--menu);
    border: 1px solid var(--bg2);
  }
  .dm #passages::-webkit-scrollbar-track {
    background-color: var(--dm-menu);
    border: 1px solid var(--dm-bg2);
  }
  #passages::-webkit-scrollbar-thumb {
    background-color: var(--menu);
  }
  .dm #passages::-webkit-scrollbar-thumb {
    background-color: var(--dm-menu);
  }

  /*headings*/
  #story h1 {
    font-family: var(--special);
    margin: .2em;
    text-transform: uppercase;
    font-weight: normal;
  }
  #story h2 {
    color: var(--menu);
    margin: .2em;
    text-transform: uppercase;
  }
  .dm #story h2 {
    color: var(--dm-menu);
  }
  #story h3 {
    margin: .2em;
    text-transform: lowercase;
    letter-spacing: .2em;
  }

  /*links*/
  a {
    color: var(--text);
    text-decoration: none !important;
  }
  .dm a {
    color: var(--dm-link);
  }
  a:hover {
    color: var(--menu);
  }
  .dm a:hover {
    color: var(--dm-link-hover);
  }
  .passage a {
    font-weight: bold;
  }
  .passage a:hover {
    color: var(--text);
    font-style: italic;
  }
  .dm .passage a:hover {
    color: var(--dm-text);
  }
  .header a:hover {
    color: var(--accent) !important;
    transition: .5s;
  }
  .dm .header a:hover {
    color: var(--dm-accent) !important;
  }

  /*cycling*/
  #story .macro-cycle {
    font-weight: bold;
  }
  #story .macro-cycle:hover {
    font-style: italic;
  }
  #story .macro-cycle::after {
    color: var(--menu);
    content: "↴";
    padding-left: .2em;
  }
  .dm #story .macro-cycle::after {
    color: var(--dm-menu);
  }

  /*buttons*/
  .passage button {
    background-color: transparent;
    color: var(--text);
    border: 1px solid var(--text);
    cursor: pointer;
    text-transform: uppercase;
    font-weight: bold;
    letter-spacing: .05em;
    padding: .5em;
  }
  .dm .passage button {
    color: var(--dm-text);
    border: 1px solid var(--dm-text);
  }
  .passage button:hover {
    box-shadow: 4px 4px 0 var(--menu);
  }
  .dm .passage button:hover {
    box-shadow: 4px 4px 0 var(--dm-menu);
  }
  .next button {
    display: flex;
    margin: 0 auto;
    transform: translateX(-10%);
  }

  /*textbox*/
  #story .macro-textbox {
    background-color: transparent;
    color: var(--text);
    border: 1px solid var(--text);
    letter-spacing: .05em;
    padding: .5em;
    margin-right: .5em;
  }
  .dm #story .macro-textbox {
    color: var(--dm-text);
    border: 1px solid var(--dm-text);
  }
  #story .macro-textbox:focus {
    box-shadow: 4px 4px 0 var(--menu);
  }
  .dm #story .macro-textbox:focus {
    box-shadow: 4px 4px 0 var(--dm-menu);
  }

  /*lists*/
  #story ul {
    list-style: none;
    padding-left: 2em;
    margin: auto;
    text-align: left;
  }
  #story ul li{
    cursor: pointer;
    letter-spacing: 0.1em;
  }
  #story ul li::before {
    content: '|';
    margin-right: .5em;
    margin-left: -1em;
  }
  #story ul li:hover {
    color: var(--menu);
    font-weight: bold;
  }
  .dm #story ul li:hover {
    color: var(--dm-menu);
  }

  /*header*/
  .header {
    background-color: var(--menu);
    height: 10%;
    width: 100%;
    transition: 0.75s;
    display: flex;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
  }
  .dm .header {
    background-color: var(--dm-menu);
  }
  .header:hover {
    height: 14%;
  }
  #header-text {
    text-align: center;
    margin: 0 auto;
  }
  .title {
    color: var(--text);
    font-family: var(--special);
    text-transform: uppercase;
    font-size: 3vw;
  }
  .dm .title {
    color: var(--dm-text);
  }
  .author {
    font-family: var(--sansserif);
    text-transform: lowercase;
    letter-spacing: .1em;
    font-size: .7vw;
  }
  .author a:hover {
    font-weight: bold;
  }

  /*function menu*/
  #function-menu {
    display: flex;
    position: fixed;
    left: 2%;
  }
  #function-menu span {
    color: transparent;
    position: relative;
    padding: 20px;
    transition: 0.3s;
    font-size: 1.5vw;
  }
  #menu {
    color: var(--text) !important;
  }
  .dm #menu {
    color: var(--dm-text);
  }
  .header:hover #function-menu span {
    color: var(--text);
    cursor: pointer;
    transition: 0.75s;
  }
  .dm .header:hover #function-menu span {
    color: var(--dm-text);
  }
  .header:hover #settings:hover {
    color: var(--accent);
    transition: 0.5s;
  }
  .dm .header:hover #settings:hover {
    color: var(--dm-accent);
  }
  .header:hover #saves:hover {
    color: var(--accent);
    transition: 0.5s;
  }
  .dm .header:hover #saves:hover {
    color: var(--dm-accent);
  }
  .header:hover #restart:hover {
    color: var(--accent);
    transition: 0.5s;
  }
  .dm .header:hover #restart:hover {
    color: var(--dm-accent);
  }
  .mobile-menu {
    display: none;
  }

  /*back button*/
  #back {
    color: var(--menu);
    position: fixed;
    left: 15%;
    font-size: 1.5vw;
  }
  .dm #back {
    color: var(--dm-text);
  }
  #back:hover {
    color: var(--text);
    cursor: pointer;
    transition: 0.75s;
  }
  .dm #back:hover {
    color: var(--dm-menu);
  }

  /*up button*/
  #up {
    color: var(--text);
    cursor: pointer;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    font-size: 1.5vw;
  }
  .dm #up {
    color: var(--dm-text);
  }
  .footer:hover #up {
    color: var(--menu);
    bottom: 75%;
  }
  .dm .footer:hover #up {
    color: var(--dm-menu);
  }

  /*footer*/
  .footer {
    background-color: var(--menu);
    height: 10%;
    width: 100%;
    transition: 0.75s;
    display: flex;
    align-items: center;
    position: fixed;
    bottom: 0;
    left: 0;
  }
  .dm .footer {
    background-color: var(--dm-menu);
  }
  .footer:hover {
    height: 14%;
  }

  /*footer menu*/
  #footer-menu {
    font-family: var(--special);
    display: flex;
    justify-content: center;
    margin: 0 auto;
  }
  #footer-menu a {
    color: transparent;
    transition: 0.75s;
    font-size: 2vw;
  }
  .footer:hover #footer-menu a {
    color: var(--text);
    cursor: pointer;
    transition: 0.75s;
  }
  .dm .footer:hover #footer-menu a {
    color: var(--dm-text);
  }
  #footer-menu li {
    list-style: none;
    padding: 5%;
  }
  #footer-menu a:hover {
    letter-spacing: .1em;
  }

  /*dialog boxes*/
  #ui-overlay {
    background-color: var(--bg);
    position: fixed;
    height: 100vh;
    width: 100vw;
    top: 0;
    left: 0;
    overflow: hidden;
  }
  .dm #ui-overlay {
    background-color: var(--dm-bg);
  }
  #ui-dialog {
    background-color: var(--menu);
    height: auto;
    max-width: 60vw;
    padding: .5em;
  }
  .dm #ui-dialog {
    background-color: var(--dm-menu);
    border: 1px solid var(--dm-menu);
  }
  #ui-dialog-titlebar {
    background-color: var(--menu);
    position: relative;
    padding: 2em;
  }
  .dm #ui-dialog-titlebar {
    background-color: var(--dm-menu);
  }
  #ui-dialog-title {
    font-family: var(--special);
    font-size: 2em;
    font-weight: normal;
    text-align: center;
    width: 100%;
    padding: 0;
  }
  #ui-dialog-close {
    background-color: transparent;
    color: var(--text);
    height: auto;
    width: auto;
    border: none;
    font-size: 2em;
    position: absolute;
    top: .5em;
    right: .5em;
  }
  .dm #ui-dialog-close {
    color: var(--dm-text);
  }
  #ui-dialog-close:hover {
    background-color: transparent;
    color: var(--accent);
  }
  .dm #ui-dialog-close:hover {
    color: var(--dm-accent);
  }
  #ui-dialog-body {
    background-color: var(--bg2);
    border: none;
    color: var(--text);
    height: auto;
    width: 100%;
    font-family: var(--sansserif);
    font-size: 90%;
  }
  .dm #ui-dialog-body {
    background-color: var(--dm-bg2);
    color: var(--dm-text);
  }
  #ui-dialog-body button {
    background-color: var(--menu);
    border: 1px solid var(--text);
    color: var(--text);
    text-transform: uppercase;
    font-weight: bold;
  }
  #ui-dialog-body button::before {
    content: "" !important;
  }
  .dm #ui-dialog-body button {
    background-color: var(--dm-menu);
    border: 1px solid var(--dm-text);
    color: var(--dm-text);
  }
  #ui-dialog-body button:hover {
    box-shadow: 4px 4px 0 var(--text);
  }
  .dm #ui-dialog-body button:hover {
    box-shadow: 4px 4px 0 var(--dm-text);
  }

  /*setting dropdowns*/
  #setting-control-theme, #setting-control-fontsize, #setting-control-fontfamily {
    background-color: var(--bg);
    border: 1px solid var(--text);
    color: var(--text);
  }
  .dm #setting-control-theme, .dm #setting-control-fontsize, .dm #setting-control-fontfamily {
    background-color: var(--dm-bg);
    border: 1px solid var(--dm-text);
    color: var(--dm-text);
  }
  #setting-control-theme:hover, #setting-control-fontsize:hover, #setting-control-fontfamily:hover {
    background-color: var(--menu);
    border: 1px solid var(--text);
    color: var(--text);
  }
  .dm #setting-control-theme:hover, .dm #setting-control-fontsize:hover, .dm #setting-control-fontfamily:hover {
    background-color: var(--dm-menu);
    border: 1px solid var(--dm-text);
    color: var(--dm-text);
  }

  /*setting toggle buttons*/
  #ui-dialog-body.settings button[id|=setting-control] {
    background-color: var(--bg);
    border: 1px solid var(--text);
    color: var(--text);
    text-transform: none;
    font-weight: normal;
  }
  .dm #ui-dialog-body.settings button[id|=setting-control] {
    background-color: var(--dm-bg);
    border: 1px solid var(--dm-text);
    color: var(--dm-text);
  }
  #ui-dialog-body button[id|="setting-control"]:hover {
    background-color: var(--bg) !important;
    border: 1px solid var(--text) !important;
    box-shadow: none;
  }
  .dm #ui-dialog-body button[id|="setting-control"]:hover {
    background-color: var(--dm-bg) !important;
    border: 1px solid var(--dm-text) !important;
  }
  #ui-dialog-body button[id|="setting-control"].enabled {
    background-color: var(--menu) !important;
    border: 1px solid var(--text) !important;
  }
  .dm #ui-dialog-body button[id|="setting-control"].enabled {
    background-color: var(--dm-menu) !important;
    border: 1px solid var(--dm-text) !important;
  }

  /*stat bars*/
  .stat-bar-group {
    max-width: 700px;
    margin: 0 auto;
    padding: 1em 3em 3em;
    border: 1px solid var(--menu);
  }
  .dm .stat-bar-group {
    border: 1px solid var(--dm-menu);
  }
  .stat-bar-container {
    background-color: var(--accent);
    color: var(--text);
    position: relative;
    height: 3vh;
    width: 100%;
    padding: 1em 0;
    text-transform: uppercase;
    font-weight: bold;
    letter-spacing: .05em;
  }
  .dm .stat-bar-container {
    background-color: var(--dm-accent);
    color: var(--dm-text);
  }
  .stat-bar {
    background-color: var(--menu);
    max-width: 100%;
    height: 100%;
    width: 50%;
    position: absolute;
    top: 0;
    left: 0;
  }
  .dm .stat-bar {
    background-color: var(--dm-menu);
  }
  .stat-bar-overlay-right {
    position: absolute;
    right: .5em;
    bottom: 20%;
    z-index: 3;
  }
  .stat-bar-overlay-left {
    position: absolute;
    left: .5em;
    bottom: 20%;
    z-index: 3;
  }

  /*notifications*/
  #notify {
    background-color: var(--bg2);
    color: var(--text);
    display: block;
    width: 15em;
    font-family: var(--sansserif);
    text-align: left;
    text-transform: lowercase;
    letter-spacing: .05em;
    padding : .5em;
    -webkit-transition: right 1s;
    -moz-transition: right 1s;
    -o-transition: right 1s;
    transition: right 1s;
    position: fixed;
    right: -20em;
    top: 13%;
  }
  .dm #notify {
    background-color: var(--dm-bg2);
    color: var(--dm-text);
  }
  #notify.open {
    right: 0;
  }

  /*tablet*/
  @media screen and (max-width: 1024px) {
    .header {
    height: 60px;
    }
    .header:hover {
    height: 100px;
    }
    .title {
    font-size: 2em;
    }
    .author {
    font-size: .7em;
    }
    #function-menu {
    display: block;
    }
    #function-menu span {
    font-size: 3vw;
    padding: .5em;
    }
    #back {
    font-size: 3vw;
    }
    #up {
    font-size: 3vw;
    }
    .footer {
    height: 60px;
    }
    .footer:hover {
    height: 100px;
    }
    #footer-menu {
    padding-top: 10em;
    transition: 1s;
    }
    #footer-menu a {
    font-size: 4vw;
    }
    .footer:hover #footer-menu {
    padding-top: 0;
    transition: 1s;
    }
    #notify {
    top: 12%;
    }
  }
  @media screen and (max-width: 800px) {
    #passages {
    max-height: 70%;
    }
    #back {
    left: 16%;
    }
    #up {
    bottom: 50%;
    }
    #footer-menu li {
    padding: 5%;
    }
    .stat-bar-group {
    padding: .5em 2em 2.5em;
    }
    .stat-bar-container {
    padding: .5em 0;
    }
    #notify {
    top: 9%;
    }
  }
  @media screen and (max-width: 600px) {
    #story {
    font-size: 80%
    }
    #story ul {
    padding-left: .5em;
    }
    #passages {
    max-height: 70%;
    border: 2.5em solid var(--bg2);
    }
    .dm #passages {
    border: 2.5em solid var(--dm-bg2);
    }
    .stat-bar-group {
    padding: 0 1em 2em;
    }
    .stat-bar-container {
    padding: 1em 0;
    font-size: 80%;
    }
    #notify {
    top: 9.5%;
    }
  }
    
  /*mobile portrait*/
  @media screen and (max-width: 420px) {
    body {
    background-color: var(--bg2);
    }
    .dm body {
    background-color: var(--dm-bg2);
    }
    #story {
    background-color: var(--bg2);
    font-size: 70%;
    }
    .dm #story {
    background-color: var(--dm-bg2);
    font-size: 70%;
    }
    #passages {
    max-height: 70%;
    width: 100%;
    border: none;
    padding: 1.5em;
    }
    .dm #passages {
    border: none;
    }
    #passages::-webkit-scrollbar {
    width: 2px;
    }
    #passages::-webkit-scrollbar-track {
    border: .5px solid var(--bg2);
    }
    .dm #passages::-webkit-scrollbar-track {
    border: .5px solid var(--dm-bg2);
    }
    .header {
    height: 40px;
    }
    .header:hover {
    height: 15vh;
    }
    .title {
    font-size: 1.5em;
    transition: .75s;
    }
    .author {
    display: none;
    transition: .75s;
    }
    .dm .author {
    color: transparent;
    }
    .author a {
    color: transparent;
    }
    .dm .author a {
    color: transparent;
    }
    .header:hover .title {
    font-size: 4vh;
    }
    .header:hover .author {
    display: block;
    color: var(--text);
    transition: .75s;
    }
    .dm .header:hover .author {
    color: var(--dm-text);
    }
    .header:hover .author a {
    color: var(--text);
    }
    .dm .header:hover .author a {
    color: var(--dm-text);
    }
    #function-menu {
    display: none;
    }
    #footer-menu {
    display: none;
    }
    #back {
    left: 2%;
    }
    .footer {
    height: 40px;
    }
    .footer:hover {
    height: 15vh;
    }
    #up {
    display: none;
    }
    #notify {
    background-color: var(--menu);
    width: 12em;
    font-size: 70%;
    font-weight: bold;
    }
    .dm #notify {
    background-color: var(--dm-menu);
    }
    /*mobile dialog boxes*/
    #ui-overlay {
    background-color: var(--menu);
    opacity: 1 !important;
    }
    .dm #ui-overlay {
    background-color: var(--dm-menu);
    }
    #ui-dialog {
    min-width: 100vw;
    position: absolute;
    top: 2em !important;
    left: 0 !important;
    padding: 1px;
    }
    #ui-dialog-close {
    font-size: 1.2em;
    top: -10%;
    right: 10%;
    }
    #ui-dialog-body {
    background-color: var(--menu);
    font-size: 80%;
    padding: 30px;
    }
    .dm #ui-dialog-body {
    background-color: var(--dm-menu);
    }
    #ui-dialog-body.saves {
    font-size: 60%;
    padding: 10px;
    }
    #ui-dialog-body button {
    background-color: var(--bg2);
    }
    .dm #ui-dialog-body button {
    background-color: var(--dm-bg2);
    }
    /*mobile menu*/
    .mobile-menu {
    height: 100px;
    width: 100%;
    display: block;
    position: fixed;
    left: 0;
    bottom: -70px;
    }
    .footer:hover .mobile-menu {
    height: 13vh;
    bottom: 0;
    }
    #mob-menu {
    transition: .75s;
    position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }
    .footer:hover #mob-menu {
    color: transparent;
    transition: 0s;
    }
    #mob-function-menu {
    margin: 2.2vh auto 1vh;
    color: transparent;
    text-align: center;
    font-size: 2.5vh;
    padding-top: 20em;
    transition: 1s;
    }
    .footer:hover #mob-function-menu {
    color: var(--text);
    padding-top: 0;
    transition: 1s;
    }
    .dm .footer:hover #mob-function-menu {
    color: var(--dm-text);
    }
    #mob-function-menu span {
    padding: 5px;
    }
    #mob-footer-menu {
    display: none;
    transition: 1s;
    }
    #mob-footer-menu li {
    font-family: var(--special);
    font-size: 3vh;
    padding: .2vh 1vh;
    }
    .footer:hover #mob-footer-menu {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    transition: 1s;
    }
  .footer:hover #mob-footer-menu a {
    color: var(--text);
    }
    .dm .footer:hover #mob-footer-menu a {
    color: var(--dm-text);
    }
  }
  /*mobile landscape*/
  @media screen and (max-height: 500px) {
    .passage {
    font-size: 80%;
    }
    #story ul {
    padding-left: 1em;
    }
    #ui-dialog-titlebar {
    padding: 1em;
    }
    #ui-dialog-close {
    top: 0;
    }
    #ui-dialog-body {
    max-height: 65vh;
    font-size: 80%;
    }
    #ui-dialog-body::-webkit-scrollbar-track {
    background-color: var(--menu);
    border: 1px solid var(--bg2);
    }
    .dm #ui-dialog-body::-webkit-scrollbar-track {
    background-color: var(--dm-menu);
    border: 1px solid var(--dm-bg2);
    }
    #ui-dialog-body::-webkit-scrollbar-thumb {
    background-color: var(--menu);
    }
    .dm #ui-dialog-body::-webkit-scrollbar-thumb {
    background-color: var(--dm-menu);
    }
    #ui-dialog-body.saves {
    padding: 1em;
    }
    #footer-menu {
      padding-top: 4em;
    }
    #notify {
    width: 12em;
    font-size: 70%;
    font-weight: bold;
    top: 5vh;
    }
  }

  .w3-center{text-align:center!important}
  /* Colors */
  .w3-red{color:#fff!important;background-color:#f44336!important}
  .w3-blue{color:#fff!important;background-color:#2196F3!important}
  .w3-green{color:#fff!important;background-color:#4CAF50!important}
  .w3-yellow{color:#000!important;background-color:#ffeb3b!important}
  .hud-bar {
    width: 90%;
    background-color: #202324;
    height: 2em;
  }
  .hud-flex-box {
    display: flex;
    justify-content: space-between;
  }
  .hud-content {
    height: 100%;
  }
  .hud-box {
    width: 100%;
  }